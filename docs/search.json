[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Jodavid Ferreira Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jodavid Ferreira. Author, maintainer. Ronei Moraes. Contributor. Arthur Ricardo. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ferreira J (2022). FuzzyClass: Fuzzy Non-Fuzzy Classifiers. R package version 0.1.2.900, https://github.com/Jodavid/FuzzyClass.","code":"@Manual{,   title = {FuzzyClass: Fuzzy and Non-Fuzzy Classifiers},   author = {Jodavid Ferreira},   year = {2022},   note = {R package version 0.1.2.900},   url = {https://github.com/Jodavid/FuzzyClass}, }"},{"path":"/index.html","id":"fuzzyclass-","dir":"","previous_headings":"","what":"Fuzzy and Non-Fuzzy Classifiers","title":"Fuzzy and Non-Fuzzy Classifiers","text":"Last update: 24-08-2022","code":""},{"path":[]},{"path":"/index.html","id":"installation","dir":"","previous_headings":"A family of probabilities-based classifiers Fuzzy and Non-Fuzzy","what":"Installation","title":"Fuzzy and Non-Fuzzy Classifiers","text":"","code":"# Installation install.packages(\"devtools\") devtools::install_github(\"Jodavid/FuzzyClass\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"A family of probabilities-based classifiers Fuzzy and Non-Fuzzy","what":"Usage","title":"Fuzzy and Non-Fuzzy Classifiers","text":"","code":"# package import library(FuzzyClass)"},{"path":"/index.html","id":"data-reading-and-preparation-for-use","dir":"","previous_headings":"A family of probabilities-based classifiers Fuzzy and Non-Fuzzy","what":"Data reading and preparation for use","title":"Fuzzy and Non-Fuzzy Classifiers","text":"","code":"library(FuzzyClass) library(caret) #> Carregando pacotes exigidos: ggplot2 #> Carregando pacotes exigidos: lattice #> Warning in system(\"timedatectl\", intern = TRUE): execução do comando #> 'timedatectl' teve status 1  #' --------------------------------------------- #' The following shows how the functions are used: #' -------------- #' Reading a database: #' #' Actual training data: data(VirtualRealityData)  VirtualRealityData <- as.data.frame(VirtualRealityData)  # Splitting into Training and Testing split <- caTools::sample.split(t(VirtualRealityData[,1]), SplitRatio = 0.7) Train <- subset(VirtualRealityData, split == \"TRUE\") Test <- subset(VirtualRealityData, split == \"FALSE\") # ----------------  test = Test[,-4]"},{"path":"/index.html","id":"fuzzy-gaussian-naive-bayes-with-fuzzy-parameters","dir":"","previous_headings":"A family of probabilities-based classifiers Fuzzy and Non-Fuzzy > Data reading and preparation for use","what":"Fuzzy Gaussian Naive Bayes with Fuzzy Parameters","title":"Fuzzy and Non-Fuzzy Classifiers","text":"","code":"# -------------------------------------------------- # Fuzzy Gaussian Naive Bayes with Fuzzy Parameters   fit_FGNB <- GauNBFuzzyParam(train =  Train[,-4],                                     cl = Train[,4], metd = 1, cores = 1)   print(fit_FGNB) #>  #> Fuzzy Gaussian Naive Bayes Classifier for Discrete Predictors #>  #> Variables: #> [1] \"V1\" \"V2\" \"V3\" #> Class: #> [1] \"1\" \"2\" \"3\" saida <- predict(fit_FGNB, test) confusionMatrix(factor(Test[,4]), saida) #> Confusion Matrix and Statistics #>  #>           Reference #> Prediction  1  2  3 #>          1 53  4  0 #>          2  7 48 10 #>          3  1 12 45 #>  #> Overall Statistics #>                                            #>                Accuracy : 0.8111           #>                  95% CI : (0.7462, 0.8655) #>     No Information Rate : 0.3556           #>     P-Value [Acc > NIR] : <2e-16           #>                                            #>                   Kappa : 0.7163           #>                                            #>  Mcnemar's Test P-Value : 0.5724           #>  #> Statistics by Class: #>  #>                      Class: 1 Class: 2 Class: 3 #> Sensitivity            0.8689   0.7500   0.8182 #> Specificity            0.9664   0.8534   0.8960 #> Pos Pred Value         0.9298   0.7385   0.7759 #> Neg Pred Value         0.9350   0.8609   0.9180 #> Prevalence             0.3389   0.3556   0.3056 #> Detection Rate         0.2944   0.2667   0.2500 #> Detection Prevalence   0.3167   0.3611   0.3222 #> Balanced Accuracy      0.9176   0.8017   0.8571  saida <- predict(fit_FGNB, test, type = \"matrix\")"},{"path":"/reference/ExpNBFuzzyParam.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Exponential Naive Bayes Classifier with Fuzzy parameters — ExpNBFuzzyParam","title":"Fuzzy Exponential Naive Bayes Classifier with Fuzzy parameters — ExpNBFuzzyParam","text":"ExpNBFuzzyParam Fuzzy Exponential Naive Bayes Classifier Fuzzy parameters","code":""},{"path":"/reference/ExpNBFuzzyParam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Exponential Naive Bayes Classifier with Fuzzy parameters — ExpNBFuzzyParam","text":"","code":"ExpNBFuzzyParam(train, cl, metd = 1, cores = 2)"},{"path":"/reference/ExpNBFuzzyParam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Exponential Naive Bayes Classifier with Fuzzy parameters — ExpNBFuzzyParam","text":"train matrix data frame training set cases. cl factor true classifications training set metd Method transforming triangle scalar, type data entry test sample, use metd 1 want use Baricentro technique use metd 2 want use Q technique uniformity test (article: Directional Statistics Shape analysis). cores many cores computer want use (default = 2)","code":""},{"path":"/reference/ExpNBFuzzyParam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Exponential Naive Bayes Classifier with Fuzzy parameters — ExpNBFuzzyParam","text":"vector classifications","code":""},{"path":"/reference/ExpNBFuzzyParam.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Exponential Naive Bayes Classifier with Fuzzy parameters — ExpNBFuzzyParam","text":"Rodrigues AK, Batista TV, Moraes RM, Machado LS (2016). “new exponential naive bayes classifier fuzzy parameters.” 2016 IEEE International Conference Fuzzy Systems (FUZZ-IEEE), 1188--1194. IEEE.","code":""},{"path":"/reference/ExpNBFuzzyParam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Exponential Naive Bayes Classifier with Fuzzy parameters — ExpNBFuzzyParam","text":"","code":"set.seed(1) # determining a seed data(VirtualRealityData)  # Splitting into Training and Testing split <- caTools::sample.split(t(VirtualRealityData[, 1]), SplitRatio = 0.7) Train <- subset(VirtualRealityData, split == \"TRUE\") Test <- subset(VirtualRealityData, split == \"FALSE\")  # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -4] fit_FENB <- ExpNBFuzzyParam(   train = Train[, -4],   cl = Train[, 4], metd = 1, cores = 2 )  pred_FENB <- predict(fit_FENB, test)  head(pred_FENB) #> [1] 1 1 1 1 1 1 #> Levels: 1 2 3 head(Test[, 4]) #> [1] 1 1 1 1 1 1"},{"path":"/reference/FuzzyBetaNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Beta Naive Bayes — FuzzyBetaNaiveBayes","title":"Fuzzy Beta Naive Bayes — FuzzyBetaNaiveBayes","text":"FuzzyBetaNaiveBayes Fuzzy Beta Naive Bayes","code":""},{"path":"/reference/FuzzyBetaNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Beta Naive Bayes — FuzzyBetaNaiveBayes","text":"","code":"FuzzyBetaNaiveBayes(train, cl, cores = 2, fuzzy = TRUE)"},{"path":"/reference/FuzzyBetaNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Beta Naive Bayes — FuzzyBetaNaiveBayes","text":"train matrix data frame training set cases. cl factor true classifications training set cores many cores computer want use (default = 2) fuzzy boolean variable use membership function","code":""},{"path":"/reference/FuzzyBetaNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Beta Naive Bayes — FuzzyBetaNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/FuzzyBetaNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Beta Naive Bayes — FuzzyBetaNaiveBayes","text":"Moraes RM, Rodrigues AKG, Soares EAMG, Machado LS (2020). “new fuzzy beta naive Bayes classifier.” Developments Artificial Intelligence Technologies Computation Robotics: Proceedings 14th International FLINS Conference (FLINS 2020), 437--445. World Scientific.","code":""},{"path":"/reference/FuzzyBetaNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Beta Naive Bayes — FuzzyBetaNaiveBayes","text":"","code":"set.seed(1) # determining a seed data(iris)  # Splitting into Training and Testing split <- caTools::sample.split(t(iris[, 1]), SplitRatio = 0.7) Train <- subset(iris, split == \"TRUE\") Test <- subset(iris, split == \"FALSE\") #---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -5] fit_NBT <- FuzzyBetaNaiveBayes(   train = Train[, -5],   cl = Train[, 5], cores = 2 )  pred_NBT <- predict(fit_NBT, test)  head(pred_NBT) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica head(Test[, 5]) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica"},{"path":"/reference/FuzzyBinomialNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Binomial Naive Bayes — FuzzyBinomialNaiveBayes","title":"Fuzzy Binomial Naive Bayes — FuzzyBinomialNaiveBayes","text":"FuzzyBinomialNaiveBayes Fuzzy Binomial Naive Bayes","code":""},{"path":"/reference/FuzzyBinomialNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Binomial Naive Bayes — FuzzyBinomialNaiveBayes","text":"","code":"FuzzyBinomialNaiveBayes(train, cl, cores = 2, fuzzy = TRUE)"},{"path":"/reference/FuzzyBinomialNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Binomial Naive Bayes — FuzzyBinomialNaiveBayes","text":"train matrix data frame training set cases. cl factor true classifications training set cores many cores computer want use (default = 2) fuzzy boolean variable use membership function","code":""},{"path":"/reference/FuzzyBinomialNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Binomial Naive Bayes — FuzzyBinomialNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/FuzzyBinomialNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Binomial Naive Bayes — FuzzyBinomialNaiveBayes","text":"Moraes RM, Machado LS (2016). “Fuzzy Binomial Naive Bayes classifier epidemiological data.” 2016 IEEE International Conference Fuzzy Systems (FUZZ-IEEE), 745--750. IEEE.","code":""},{"path":"/reference/FuzzyBinomialNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Binomial Naive Bayes — FuzzyBinomialNaiveBayes","text":"","code":"set.seed(1) # determining a seed class1 <- data.frame(vari1 = rbinom(100,size = 10, prob = 0.2),                      vari2 = rbinom(100,size = 10, prob = 0.2),                     vari3 = rbinom(100,size = 10, prob = 0.2), class = 1) class2 <- data.frame(vari1 = rbinom(100,size = 10, prob = 0.5),                      vari2 = rbinom(100,size = 10, prob = 0.5),                     vari3 = rbinom(100,size = 10, prob = 0.5), class = 2) class3 <- data.frame(vari1 = rbinom(100,size = 10, prob = 0.8),                      vari2 = rbinom(100,size = 10, prob = 0.8),                      vari3 = rbinom(100,size = 10, prob = 0.8), class = 3) data <- rbind(class1,class2,class3)  # Splitting into Training and Testing split <- caTools::sample.split(t(data[, 1]), SplitRatio = 0.7) Train <- subset(data, split == \"TRUE\") Test <- subset(data, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -4] fit_NBT <- FuzzyBinomialNaiveBayes(   train = Train[, -4],   cl = Train[, 4], cores = 2 )  pred_NBT <- predict(fit_NBT, test)  head(pred_NBT) #> [1] 1 1 1 1 1 1 #> Levels: 1 2 3 head(Test[, 4]) #> [1] 1 1 1 1 1 1"},{"path":"/reference/FuzzyClass-package.html","id":null,"dir":"Reference","previous_headings":"","what":"FuzzyClass: Fuzzy and Non-Fuzzy Classifiers — FuzzyClass-package","title":"FuzzyClass: Fuzzy and Non-Fuzzy Classifiers — FuzzyClass-package","text":"provides classifiers can used discrete variables continuous variables based Naive Bayes Fuzzy Naive Bayes hypothesis. methods developed researchers belong 'Laboratory Technologies Virtual Teaching Statistics (LabTEVE)' (http://www.de.ufpb.br/~labteve/) 'Laboratory Applied Statistics Image Processing Geoprocessing (LEAPIG)' (http://www.de.ufpb.br/~leapig/) 'Federal University Paraiba, Brazil'. considered statistical distributions papers published scientific literature, instance, Gaussian classifier using fuzzy parameters, proposed 'Moraes, Ferreira Machado' (2021) doi:10.1007/s40815-020-00936-4 .","code":""},{"path":[]},{"path":"/reference/FuzzyClass-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"FuzzyClass: Fuzzy and Non-Fuzzy Classifiers — FuzzyClass-package","text":"Maintainer: Jodavid Ferreira jodavid@protonmail.com (ORCID) contributors: Ronei Moraes ronei@de.ufpb.br (ORCID) [contributor] Arthur Ricardo arthur.ricardo17@gmail.com [contributor]","code":""},{"path":"/reference/FuzzyExponentialNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Exponential Naive Bayes — FuzzyExponentialNaiveBayes","title":"Fuzzy Exponential Naive Bayes — FuzzyExponentialNaiveBayes","text":"FuzzyExponentialNaiveBayes Fuzzy Exponential Naive Bayes","code":""},{"path":"/reference/FuzzyExponentialNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Exponential Naive Bayes — FuzzyExponentialNaiveBayes","text":"","code":"FuzzyExponentialNaiveBayes(train, cl, cores = 2, fuzzy = TRUE)"},{"path":"/reference/FuzzyExponentialNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Exponential Naive Bayes — FuzzyExponentialNaiveBayes","text":"train matrix data frame training set cases. cl factor true classifications training set cores many cores computer want use (default = 2) fuzzy boolean variable use membership function","code":""},{"path":"/reference/FuzzyExponentialNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Exponential Naive Bayes — FuzzyExponentialNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/FuzzyExponentialNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Exponential Naive Bayes — FuzzyExponentialNaiveBayes","text":"Moraes RM, Machado LS (2016). “fuzzy exponential naive bayes classifier.” Uncertainty Modelling Knowledge Engineering Decision Making: Proceedings 12th International FLINS Conference, 207--212. World Scientific.","code":""},{"path":"/reference/FuzzyExponentialNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Exponential Naive Bayes — FuzzyExponentialNaiveBayes","text":"","code":"set.seed(1) # determining a seed data(iris)  # Splitting into Training and Testing split <- caTools::sample.split(t(iris[, 1]), SplitRatio = 0.7) Train <- subset(iris, split == \"TRUE\") Test <- subset(iris, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -5] fit_NBT <- FuzzyExponentialNaiveBayes(   train = Train[, -5],   cl = Train[, 5], cores = 2 )  pred_NBT <- predict(fit_NBT, test)  head(pred_NBT) #> [1] setosa    virginica setosa    setosa    setosa    setosa    #> Levels: setosa versicolor virginica head(Test[, 5]) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica"},{"path":"/reference/FuzzyGammaNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Gamma Naive Bayes — FuzzyGammaNaiveBayes","title":"Fuzzy Gamma Naive Bayes — FuzzyGammaNaiveBayes","text":"FuzzyGammaNaiveBayes Fuzzy Gamma Naive Bayes","code":""},{"path":"/reference/FuzzyGammaNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Gamma Naive Bayes — FuzzyGammaNaiveBayes","text":"","code":"FuzzyGammaNaiveBayes(train, cl, cores = 2, fuzzy = TRUE)"},{"path":"/reference/FuzzyGammaNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Gamma Naive Bayes — FuzzyGammaNaiveBayes","text":"train matrix data frame training set cases. cl factor true classifications training set cores many cores computer want use (default = 2) fuzzy boolean variable use membership function","code":""},{"path":"/reference/FuzzyGammaNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Gamma Naive Bayes — FuzzyGammaNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/FuzzyGammaNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Gamma Naive Bayes — FuzzyGammaNaiveBayes","text":"Moraes RM, Soares EAMG, Machado LS (2018). “Fuzzy Gamma Naive Bayes Classifier.” Data Science Knowledge Engineering Sensing Decision Support: Proceedings 13th International FLINS Conference (FLINS 2018), 691--699. World Scientific.","code":""},{"path":"/reference/FuzzyGammaNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Gamma Naive Bayes — FuzzyGammaNaiveBayes","text":"","code":"set.seed(1) # determining a seed data(iris)  # Splitting into Training and Testing split <- caTools::sample.split(t(iris[, 1]), SplitRatio = 0.7) Train <- subset(iris, split == \"TRUE\") Test <- subset(iris, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -5] fit_NBT <- FuzzyGammaNaiveBayes(   train = Train[, -5],   cl = Train[, 5], cores = 2 )  pred_NBT <- predict(fit_NBT, test)  head(pred_NBT) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica head(Test[, 5]) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica"},{"path":"/reference/FuzzyGaussianNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Gaussian Naive Bayes Classifier Zadeh-based — FuzzyGaussianNaiveBayes","title":"Fuzzy Gaussian Naive Bayes Classifier Zadeh-based — FuzzyGaussianNaiveBayes","text":"FuzzyGaussianNaiveBayes Fuzzy Gaussian Naive Bayes Classifier Zadeh-based","code":""},{"path":"/reference/FuzzyGaussianNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Gaussian Naive Bayes Classifier Zadeh-based — FuzzyGaussianNaiveBayes","text":"","code":"FuzzyGaussianNaiveBayes(train, cl, cores = 2, fuzzy = TRUE)"},{"path":"/reference/FuzzyGaussianNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Gaussian Naive Bayes Classifier Zadeh-based — FuzzyGaussianNaiveBayes","text":"train matrix data frame training set cases. cl factor true classifications training set cores many cores computer want use (default = 2) fuzzy boolean variable use membership function","code":""},{"path":"/reference/FuzzyGaussianNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Gaussian Naive Bayes Classifier Zadeh-based — FuzzyGaussianNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/FuzzyGaussianNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Gaussian Naive Bayes Classifier Zadeh-based — FuzzyGaussianNaiveBayes","text":"Moraes RM, Machado LS (2012). “Online Assessment Medical Simulators Based Virtual Reality Using Fuzzy Gaussian Naive Bayes.” Journal Multiple-Valued Logic & Soft Computing, 18.","code":""},{"path":"/reference/FuzzyGaussianNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Gaussian Naive Bayes Classifier Zadeh-based — FuzzyGaussianNaiveBayes","text":"","code":"set.seed(1) # determining a seed data(iris)  # Splitting into Training and Testing split <- caTools::sample.split(t(iris[, 1]), SplitRatio = 0.7) Train <- subset(iris, split == \"TRUE\") Test <- subset(iris, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -5] fit_GNB <- FuzzyGaussianNaiveBayes(   train = Train[, -5],   cl = Train[, 5], cores = 2 )  pred_GNB <- predict(fit_GNB, test)  head(pred_GNB) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica head(Test[, 5]) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica"},{"path":"/reference/FuzzyGeoNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Naive Bayes Geometric Classifier — FuzzyGeoNaiveBayes","title":"Fuzzy Naive Bayes Geometric Classifier — FuzzyGeoNaiveBayes","text":"FuzzyGeoNaiveBayes Naive Bayes Geometric Classifier","code":""},{"path":"/reference/FuzzyGeoNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Naive Bayes Geometric Classifier — FuzzyGeoNaiveBayes","text":"","code":"FuzzyGeoNaiveBayes(train, cl, cores = 2, fuzzy = T)"},{"path":"/reference/FuzzyGeoNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Naive Bayes Geometric Classifier — FuzzyGeoNaiveBayes","text":"train matrix data frame training set cases. cl factor true classifications training set cores many cores computer want use (default = 2) fuzzy boolean variable use membership function","code":""},{"path":"/reference/FuzzyGeoNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Naive Bayes Geometric Classifier — FuzzyGeoNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/FuzzyGeoNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Naive Bayes Geometric Classifier — FuzzyGeoNaiveBayes","text":"Moraes RM, Ferreira JA, Machado LS (2021). “New Bayesian Network Based Gaussian Naive Bayes Fuzzy Parameters Training Assessment Virtual Simulators.” International Journal Fuzzy Systems, 23(3), 849--861.","code":""},{"path":"/reference/FuzzyGeoNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Naive Bayes Geometric Classifier — FuzzyGeoNaiveBayes","text":"","code":"set.seed(1) # determining a seed class1 <- data.frame(vari1 = rgeom(100,prob = 0.2),                      vari2 = rgeom(100,prob = 0.2),                      vari3 = rgeom(100,prob = 0.2), class = 1) class2 <- data.frame(vari1 = rgeom(100,prob = 0.5),                      vari2 = rgeom(100,prob = 0.5),                      vari3 = rgeom(100,prob = 0.5), class = 2) class3 <- data.frame(vari1 = rgeom(100,prob = 0.9),                      vari2 = rgeom(100,prob = 0.9),                      vari3 = rgeom(100,prob = 0.9), class = 3) data <- rbind(class1,class2,class3)  # Splitting into Training and Testing split <- caTools::sample.split(t(data[, 1]), SplitRatio = 0.7) Train <- subset(data, split == \"TRUE\") Test <- subset(data, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -4] fit_NBT <- FuzzyGeoNaiveBayes(   train = Train[, -4],   cl = Train[, 4], cores = 2 )  pred_NBT <- predict(fit_NBT, test)  head(pred_NBT) #> [1] 1 1 2 2 1 1 #> Levels: 1 2 3 head(Test[, 4]) #> [1] 1 1 1 1 1 1"},{"path":"/reference/FuzzyNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Naive Bayes — FuzzyNaiveBayes","title":"Fuzzy Naive Bayes — FuzzyNaiveBayes","text":"FuzzyNaiveBayes Fuzzy Naive Bayes","code":""},{"path":"/reference/FuzzyNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Naive Bayes — FuzzyNaiveBayes","text":"","code":"FuzzyNaiveBayes(train, cl, fuzzy = TRUE, m = NULL, Pi = NULL)"},{"path":"/reference/FuzzyNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Naive Bayes — FuzzyNaiveBayes","text":"train matrix data frame training set cases. cl factor true classifications training set fuzzy boolean variable use membership function m M/N, M number classes N number train lines Pi 1/M, M number classes","code":""},{"path":"/reference/FuzzyNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Naive Bayes — FuzzyNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/FuzzyNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Naive Bayes — FuzzyNaiveBayes","text":"Moraes RM, Machado LS (2009). “Another approach fuzzy naive bayes applied online training assessment virtual reality simulators.” Proceedings Safety Health Environmental World Congress, 62--66.","code":""},{"path":"/reference/FuzzyNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Naive Bayes — FuzzyNaiveBayes","text":"","code":"set.seed(1) # determining a seed data(HouseVotes84)  # Splitting into Training and Testing split <- caTools::sample.split(t(HouseVotes84[, 1]), SplitRatio = 0.7) Train <- subset(HouseVotes84, split == \"TRUE\") Test <- subset(HouseVotes84, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -1] fit_FNB <- FuzzyNaiveBayes(   train = Train[, -1],   cl = Train[, 1] )  pred_FNB <- predict(fit_FNB, test)  head(pred_FNB) #> [1] republican democrat   republican republican republican democrat   #> Levels: democrat republican head(Test[, 1]) #> [1] democrat   democrat   democrat   republican republican democrat   #> Levels: democrat republican"},{"path":"/reference/FuzzyPoissonNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Poisson Naive Bayes — FuzzyPoissonNaiveBayes","title":"Fuzzy Poisson Naive Bayes — FuzzyPoissonNaiveBayes","text":"FuzzyPoissonNaiveBayes Fuzzy Poisson Naive Bayes","code":""},{"path":"/reference/FuzzyPoissonNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Poisson Naive Bayes — FuzzyPoissonNaiveBayes","text":"","code":"FuzzyPoissonNaiveBayes(train, cl, cores = 2, fuzzy = TRUE)"},{"path":"/reference/FuzzyPoissonNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Poisson Naive Bayes — FuzzyPoissonNaiveBayes","text":"train matrix data frame training set cases. cl factor true classifications training set cores many cores computer want use (default = 2) fuzzy boolean variable use membership function","code":""},{"path":"/reference/FuzzyPoissonNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Poisson Naive Bayes — FuzzyPoissonNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/FuzzyPoissonNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Poisson Naive Bayes — FuzzyPoissonNaiveBayes","text":"Moraes RM, Machado LS (2015). “fuzzy poisson naive bayes classifier epidemiological purposes.” 2015 7th International Joint Conference Computational Intelligence (IJCCI), volume 2, 193--198. IEEE.","code":""},{"path":"/reference/FuzzyPoissonNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Poisson Naive Bayes — FuzzyPoissonNaiveBayes","text":"","code":"set.seed(1) # determining a seed class1 <- data.frame(vari1 = rpois(100,lambda = 2),                      vari2 = rpois(100,lambda = 2),                      vari3 = rpois(100,lambda = 2), class = 1) class2 <- data.frame(vari1 = rpois(100,lambda = 1),                      vari2 = rpois(100,lambda = 1),                      vari3 = rpois(100,lambda = 1), class = 2) class3 <- data.frame(vari1 = rpois(100,lambda = 5),                      vari2 = rpois(100,lambda = 5),                      vari3 = rpois(100,lambda = 5), class = 3) data <- rbind(class1,class2,class3)  # Splitting into Training and Testing split <- caTools::sample.split(t(data[, 1]), SplitRatio = 0.7) Train <- subset(data, split == \"TRUE\") Test <- subset(data, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -4] fit_NBT <- FuzzyPoissonNaiveBayes(   train = Train[, -4],   cl = Train[, 4], cores = 2 )  pred_NBT <- predict(fit_NBT, test)  head(pred_NBT) #> [1] 1 1 1 1 1 1 #> Levels: 1 2 3 head(Test[, 4]) #> [1] 1 1 1 1 1 1"},{"path":"/reference/FuzzyTrapezoidalNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Naive Bayes Trapezoidal Classifier — FuzzyTrapezoidalNaiveBayes","title":"Fuzzy Naive Bayes Trapezoidal Classifier — FuzzyTrapezoidalNaiveBayes","text":"FuzzyTrapezoidalNaiveBayes Fuzzy Naive Bayes Trapezoidal Classifier","code":""},{"path":"/reference/FuzzyTrapezoidalNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Naive Bayes Trapezoidal Classifier — FuzzyTrapezoidalNaiveBayes","text":"","code":"FuzzyTrapezoidalNaiveBayes(train, cl, cores = 2, fuzzy = T)"},{"path":"/reference/FuzzyTrapezoidalNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Naive Bayes Trapezoidal Classifier — FuzzyTrapezoidalNaiveBayes","text":"train matrix data frame training set cases. cl factor true classifications training set cores many cores computer want use (default = 2) fuzzy boolean variable use membership function","code":""},{"path":"/reference/FuzzyTrapezoidalNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Naive Bayes Trapezoidal Classifier — FuzzyTrapezoidalNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/FuzzyTrapezoidalNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Naive Bayes Trapezoidal Classifier — FuzzyTrapezoidalNaiveBayes","text":"Lopes , Ferreira J, Machado LS, Moraes RM (2022). “New Fuzzy Trapezoidal Naive Bayes Network basis Assessment Training based Virtual Reality.” 15th International FLINS Conference Machine learning, Multi agent Cyber physical systems (FLINS 2022). Nankai University.","code":""},{"path":"/reference/FuzzyTrapezoidalNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Naive Bayes Trapezoidal Classifier — FuzzyTrapezoidalNaiveBayes","text":"","code":"set.seed(1) # determining a seed data(iris)  # Splitting into Training and Testing split <- caTools::sample.split(t(iris[, 1]), SplitRatio = 0.7) Train <- subset(iris, split == \"TRUE\") Test <- subset(iris, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -5] fit_NBT <- FuzzyTrapezoidalNaiveBayes(   train = Train[, -5],   cl = Train[, 5], cores = 2 )  pred_NBT <- predict(fit_NBT, test)  head(pred_NBT) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica head(Test[, 5]) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica"},{"path":"/reference/FuzzyTriangularNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Naive Bayes Triangular Classifier — FuzzyTriangularNaiveBayes","title":"Fuzzy Naive Bayes Triangular Classifier — FuzzyTriangularNaiveBayes","text":"FuzzyTriangularNaiveBayes Fuzzy Naive Bayes Triangular Classifier","code":""},{"path":"/reference/FuzzyTriangularNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Naive Bayes Triangular Classifier — FuzzyTriangularNaiveBayes","text":"","code":"FuzzyTriangularNaiveBayes(train, cl, cores = 2, fuzzy = TRUE)"},{"path":"/reference/FuzzyTriangularNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Naive Bayes Triangular Classifier — FuzzyTriangularNaiveBayes","text":"train matrix data frame training set cases. cl factor true classifications training set cores many cores computer want use (default = 2) fuzzy boolean variable use membership function","code":""},{"path":"/reference/FuzzyTriangularNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Naive Bayes Triangular Classifier — FuzzyTriangularNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/FuzzyTriangularNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Naive Bayes Triangular Classifier — FuzzyTriangularNaiveBayes","text":"Moraes RM, Silva ILA, Machado LS (2020). “Online skills assessment training based virtual reality using novel fuzzy triangular naive Bayes network.” Developments Artificial Intelligence Technologies Computation Robotics: Proceedings 14th International FLINS Conference (FLINS 2020), 446--454. World Scientific.","code":""},{"path":"/reference/FuzzyTriangularNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Naive Bayes Triangular Classifier — FuzzyTriangularNaiveBayes","text":"","code":"set.seed(1) # determining a seed data(iris)  # Splitting into Training and Testing split <- caTools::sample.split(t(iris[, 1]), SplitRatio = 0.7) Train <- subset(iris, split == \"TRUE\") Test <- subset(iris, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -5] fit_NBT <- FuzzyTriangularNaiveBayes(   train = Train[, -5],   cl = Train[, 5], cores = 2 )  pred_NBT <- predict(fit_NBT, test)  head(pred_NBT) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica head(Test[, 5]) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica"},{"path":"/reference/GamNBFuzzyParam.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Gamma Naive Bayes Classifier with Fuzzy parameters — GamNBFuzzyParam","title":"Fuzzy Gamma Naive Bayes Classifier with Fuzzy parameters — GamNBFuzzyParam","text":"GamNBFuzzyParam Fuzzy Gamma Naive Bayes Classifier Fuzzy parameters","code":""},{"path":"/reference/GamNBFuzzyParam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Gamma Naive Bayes Classifier with Fuzzy parameters — GamNBFuzzyParam","text":"","code":"GamNBFuzzyParam(train, cl, metd = 1, cores = 2)"},{"path":"/reference/GamNBFuzzyParam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Gamma Naive Bayes Classifier with Fuzzy parameters — GamNBFuzzyParam","text":"train matrix data frame training set cases. cl factor true classifications training set metd Method transforming triangle scalar, type data entry test sample, use metd 1 want use Baricentro technique use metd 2 want use Q technique uniformity test (article: Directional Statistics Shape analysis). cores many cores computer want use (default = 2)","code":""},{"path":"/reference/GamNBFuzzyParam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Gamma Naive Bayes Classifier with Fuzzy parameters — GamNBFuzzyParam","text":"vector classifications","code":""},{"path":"/reference/GamNBFuzzyParam.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Gamma Naive Bayes Classifier with Fuzzy parameters — GamNBFuzzyParam","text":"Moraes RM, Ferreira JA, Machado LS (2021). “New Bayesian Network Based Gaussian Naive Bayes Fuzzy Parameters Training Assessment Virtual Simulators.” International Journal Fuzzy Systems, 23(3), 849--861.","code":""},{"path":"/reference/GamNBFuzzyParam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Gamma Naive Bayes Classifier with Fuzzy parameters — GamNBFuzzyParam","text":"","code":"set.seed(1) # determining a seed data(iris)  # Splitting into Training and Testing split <- caTools::sample.split(t(iris[, 1]), SplitRatio = 0.7) Train <- subset(iris, split == \"TRUE\") Test <- subset(iris, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -5] fit_FGNB <- GamNBFuzzyParam(   train = Train[, -5],   cl = Train[, 5], metd = 1, cores = 2 )  pred_FGNB <- predict(fit_FGNB, test)  head(pred_FGNB) #> [1] versicolor versicolor virginica  versicolor versicolor virginica  #> Levels: setosa versicolor virginica head(Test[, 5]) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica"},{"path":"/reference/GauNBFuzzyParam.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Gaussian Naive Bayes Classifier with Fuzzy parameters — GauNBFuzzyParam","title":"Fuzzy Gaussian Naive Bayes Classifier with Fuzzy parameters — GauNBFuzzyParam","text":"GauNBFuzzyParam Fuzzy Gaussian Naive Bayes Classifier Fuzzy parameters","code":""},{"path":"/reference/GauNBFuzzyParam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Gaussian Naive Bayes Classifier with Fuzzy parameters — GauNBFuzzyParam","text":"","code":"GauNBFuzzyParam(train, cl, metd = 1, cores = 2)"},{"path":"/reference/GauNBFuzzyParam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Gaussian Naive Bayes Classifier with Fuzzy parameters — GauNBFuzzyParam","text":"train matrix data frame training set cases. cl factor true classifications training set metd Method transforming triangle scalar, type data entry test sample, use metd 1 want use Baricentro technique use metd 2 want use Q technique uniformity test (article: Directional Statistics Shape analysis). cores many cores computer want use (default = 2)","code":""},{"path":"/reference/GauNBFuzzyParam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Gaussian Naive Bayes Classifier with Fuzzy parameters — GauNBFuzzyParam","text":"vector classifications","code":""},{"path":"/reference/GauNBFuzzyParam.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Gaussian Naive Bayes Classifier with Fuzzy parameters — GauNBFuzzyParam","text":"Moraes RM, Ferreira JA, Machado LS (2021). “New Bayesian Network Based Gaussian Naive Bayes Fuzzy Parameters Training Assessment Virtual Simulators.” International Journal Fuzzy Systems, 23(3), 849--861.","code":""},{"path":"/reference/GauNBFuzzyParam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Gaussian Naive Bayes Classifier with Fuzzy parameters — GauNBFuzzyParam","text":"","code":"set.seed(1) # determining a seed data(iris)  # Splitting into Training and Testing split <- caTools::sample.split(t(iris[, 1]), SplitRatio = 0.7) Train <- subset(iris, split == \"TRUE\") Test <- subset(iris, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -5] fit_FGNB <- GauNBFuzzyParam(   train = Train[, -5],   cl = Train[, 5], metd = 1, cores = 2 )  pred_FGNB <- predict(fit_FGNB, test)  head(pred_FGNB) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica head(Test[, 5]) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica"},{"path":"/reference/HouseVotes84.html","id":null,"dir":"Reference","previous_headings":"","what":"United States Congressional Voting Records 1984 — HouseVotes84","title":"United States Congressional Voting Records 1984 — HouseVotes84","text":"data set includes votes U.S. House     Representatives Congressmen 16 key votes identified     CQA.  CQA lists nine different types votes: voted , paired     , announced (three simplified yea), voted     , paired , announced (three     simplified nay), voted present, voted present avoid conflict     interest, vote otherwise make position known     (three simplified unknown disposition).","code":""},{"path":"/reference/HouseVotes84.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"United States Congressional Voting Records 1984 — HouseVotes84","text":"","code":"data(HouseVotes84)"},{"path":"/reference/HouseVotes84.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"United States Congressional Voting Records 1984 — HouseVotes84","text":"data frame 435 observations 17 variables:","code":""},{"path":"/reference/HouseVotes84.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"United States Congressional Voting Records 1984 — HouseVotes84","text":"Source: Congressional Quarterly Almanac, 98th Congress, \t2nd session 1984, Volume XL: Congressional Quarterly Inc., \tington, D.C., 1985 Donor: Jeff Schlimmer (Jeffrey.Schlimmer@.gp.cs.cmu.edu) data taken UCI Repository Machine Learning     Databases https://archive.ics.uci.edu/ml/machine-learning-databases/ http://www.ics.uci.edu/~mlearn/MLRepository.html converted R format Friedrich Leisch.","code":""},{"path":"/reference/HouseVotes84.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"United States Congressional Voting Records 1984 — HouseVotes84","text":"Newman, D.J. & Hettich, S. & Blake, C.L. & Merz, C.J. (1998).   UCI Repository machine learning databases   [http://www.ics.uci.edu/~mlearn/MLRepository.html]. Irvine, CA:   University California, Department Information Computer   Science.","code":""},{"path":"/reference/HouseVotes84.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"United States Congressional Voting Records 1984 — HouseVotes84","text":"","code":"data(HouseVotes84) summary(HouseVotes84) #>         Class        V1         V2         V3         V4         V5      #>  democrat  :267   n   :236   n   :192   n   :171   n   :247   n   :208   #>  republican:168   y   :187   y   :195   y   :253   y   :177   y   :212   #>                   NA's: 12   NA's: 48   NA's: 11   NA's: 11   NA's: 15   #>     V6         V7         V8         V9        V10        V11        V12      #>  n   :152   n   :182   n   :178   n   :206   n   :212   n   :264   n   :233   #>  y   :272   y   :239   y   :242   y   :207   y   :216   y   :150   y   :171   #>  NA's: 11   NA's: 14   NA's: 15   NA's: 22   NA's:  7   NA's: 21   NA's: 31   #>    V13        V14        V15        V16      #>  n   :201   n   :170   n   :233   n   : 62   #>  y   :209   y   :248   y   :174   y   :269   #>  NA's: 25   NA's: 17   NA's: 28   NA's:104"},{"path":"/reference/PoiNBFuzzyParam.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Poisson Naive Bayes Classifier with Fuzzy parameters — PoiNBFuzzyParam","title":"Fuzzy Poisson Naive Bayes Classifier with Fuzzy parameters — PoiNBFuzzyParam","text":"PoiNBFuzzyParam Fuzzy Poisson Naive Bayes Classifier Fuzzy parameters","code":""},{"path":"/reference/PoiNBFuzzyParam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Poisson Naive Bayes Classifier with Fuzzy parameters — PoiNBFuzzyParam","text":"","code":"PoiNBFuzzyParam(train, cl, metd = 1, cores = 2)"},{"path":"/reference/PoiNBFuzzyParam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Poisson Naive Bayes Classifier with Fuzzy parameters — PoiNBFuzzyParam","text":"train matrix data frame training set cases. cl factor true classifications training set metd Method transforming triangle scalar, type data entry test sample, use metd 1 want use Baricentro technique use metd 2 want use Q technique uniformity test (article: Directional Statistics Shape analysis). cores many cores computer want use (default = 2)","code":""},{"path":"/reference/PoiNBFuzzyParam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Poisson Naive Bayes Classifier with Fuzzy parameters — PoiNBFuzzyParam","text":"vector classifications","code":""},{"path":"/reference/PoiNBFuzzyParam.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Poisson Naive Bayes Classifier with Fuzzy parameters — PoiNBFuzzyParam","text":"Soares E, Machado L, Moraes R (2016). “Assessment poisson naive bayes classifier fuzzy parameters using data different statistical distributions.” IV Bazilian Congress Fuzzy Sistems (CBSF 2016), volume 1, 57--68.","code":""},{"path":"/reference/PoiNBFuzzyParam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Poisson Naive Bayes Classifier with Fuzzy parameters — PoiNBFuzzyParam","text":"","code":"set.seed(1) # determining a seed class1 <- data.frame(vari1 = rpois(100,lambda = 2),                      vari2 = rpois(100,lambda = 2),                      vari3 = rpois(100,lambda = 2), class = 1) class2 <- data.frame(vari1 = rpois(100,lambda = 1),                      vari2 = rpois(100,lambda = 1),                      vari3 = rpois(100,lambda = 1), class = 2) class3 <- data.frame(vari1 = rpois(100,lambda = 5),                      vari2 = rpois(100,lambda = 5),                      vari3 = rpois(100,lambda = 5), class = 3) data <- rbind(class1,class2,class3)  # Splitting into Training and Testing split <- caTools::sample.split(t(data[, 1]), SplitRatio = 0.7) Train <- subset(data, split == \"TRUE\") Test <- subset(data, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -4] fit_FPoiNB <- PoiNBFuzzyParam(   train = Train[, -4],   cl = Train[, 4], metd = 1, cores = 2 )  pred_FPoiNB <- predict(fit_FPoiNB, test)  head(pred_FPoiNB) #> [1] 2 2 2 1 3 2 #> Levels: 1 2 3 head(Test[, 4]) #> [1] 1 1 1 1 1 1"},{"path":"/reference/SimulatedData.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Data — SimulatedData","title":"Simulated Data — SimulatedData","text":"dataset containing training data Gammma Distribuition","code":""},{"path":"/reference/SimulatedData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Data — SimulatedData","text":"","code":"SimulatedData"},{"path":"/reference/SimulatedData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Data — SimulatedData","text":"dataset 600 rows 4 variables 1 label.","code":""},{"path":"/reference/VirtualRealityData.html","id":null,"dir":"Reference","previous_headings":"","what":"Virtual Reality Simulator Data — VirtualRealityData","title":"Virtual Reality Simulator Data — VirtualRealityData","text":"dataset containing training data virtual reality simulator","code":""},{"path":"/reference/VirtualRealityData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Virtual Reality Simulator Data — VirtualRealityData","text":"","code":"VirtualRealityData"},{"path":"/reference/VirtualRealityData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Virtual Reality Simulator Data — VirtualRealityData","text":"dataset 600 rows 4 variables 1 label.","code":""},{"path":[]},{"path":"/news/index.html","id":"fuzzyclass-012900","dir":"Changelog","previous_headings":"","what":"FuzzyClass 0.1.2.900","title":"FuzzyClass 0.1.2.900","text":"Update parameters estimation function FuzzyTriangularNaiveBayes.","code":""},{"path":"/news/index.html","id":"fuzzyclass-012","dir":"Changelog","previous_headings":"","what":"FuzzyClass 0.1.2","title":"FuzzyClass 0.1.2","text":"CRAN release: 2022-08-25","code":""},{"path":"/news/index.html","id":"new-features-0-1-2","dir":"Changelog","previous_headings":"","what":"New features","title":"FuzzyClass 0.1.2","text":"Changed \\() function(.) function FuzzyNaiveBayes, line 262. Changed description FuzzyClass Documentation","code":""},{"path":"/news/index.html","id":"fuzzyclass-011","dir":"Changelog","previous_headings":"","what":"FuzzyClass 0.1.1","title":"FuzzyClass 0.1.1","text":"CRAN release: 2022-05-27","code":""},{"path":"/news/index.html","id":"new-features-0-1-1","dir":"Changelog","previous_headings":"","what":"New features","title":"FuzzyClass 0.1.1","text":"Estimation new form function FuzzyGammaNaiveBayes.","code":""}]
