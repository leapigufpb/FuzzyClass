[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Jodavid Ferreira Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/FuzzyClass.html","id":"exploratory-data-analysis-of-the-iris-dataset","dir":"Articles","previous_headings":"","what":"Exploratory Data Analysis of the Iris Dataset","title":"Using FuzzyClass","text":"vignette, perform exploratory data analysis (EDA) classic iris dataset. dataset consists measurements sepal length, sepal width, petal length, petal width three species iris flowers. use various visualizations summary statistics gain insights data.","code":""},{"path":"/articles/FuzzyClass.html","id":"loading-the-data","dir":"Articles","previous_headings":"Exploratory Data Analysis of the Iris Dataset","what":"Loading the Data","title":"Using FuzzyClass","text":"Let’s start loading iris dataset examining structure: output provides summary dataset’s structure: dataset data.frame 150 observations (rows) 5 variables (columns). variable listed name data type (num numeric Factor categorical). numeric variables (Sepal.Length, Sepal.Width, Petal.Length, Petal.Width), summary statistics like mean, median, quartiles might shown. Species variable categorical factor 3 levels: “setosa”, “versicolor”, “virginica”. summary gives overview dataset’s dimensions, variable types, basic statistics, helping users understand dataset’s content diving analysis.","code":"# Load the iris dataset data(iris)  # Display the structure of the dataset str(iris) #> 'data.frame':    150 obs. of  5 variables: #>  $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ... #>  $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ... #>  $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ... #>  $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ... #>  $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ..."},{"path":"/articles/FuzzyClass.html","id":"summary-statistics","dir":"Articles","previous_headings":"Exploratory Data Analysis of the Iris Dataset","what":"Summary Statistics","title":"Using FuzzyClass","text":"Next, let’s calculate summary statistics species: output provides summary statistics numeric attribute within species iris flowers. species, statistics minimum, maximum, mean, median, quartiles presented attribute. information gives insight distribution variation attributes across different species, aiding understanding characteristics iris species.","code":"# Calculate summary statistics by species summary_by_species <- by(iris[, -5], iris$Species, summary) summary_by_species #> iris$Species: setosa #>   Sepal.Length    Sepal.Width     Petal.Length    Petal.Width    #>  Min.   :4.300   Min.   :2.300   Min.   :1.000   Min.   :0.100   #>  1st Qu.:4.800   1st Qu.:3.200   1st Qu.:1.400   1st Qu.:0.200   #>  Median :5.000   Median :3.400   Median :1.500   Median :0.200   #>  Mean   :5.006   Mean   :3.428   Mean   :1.462   Mean   :0.246   #>  3rd Qu.:5.200   3rd Qu.:3.675   3rd Qu.:1.575   3rd Qu.:0.300   #>  Max.   :5.800   Max.   :4.400   Max.   :1.900   Max.   :0.600   #> ------------------------------------------------------------  #> iris$Species: versicolor #>   Sepal.Length    Sepal.Width     Petal.Length   Petal.Width    #>  Min.   :4.900   Min.   :2.000   Min.   :3.00   Min.   :1.000   #>  1st Qu.:5.600   1st Qu.:2.525   1st Qu.:4.00   1st Qu.:1.200   #>  Median :5.900   Median :2.800   Median :4.35   Median :1.300   #>  Mean   :5.936   Mean   :2.770   Mean   :4.26   Mean   :1.326   #>  3rd Qu.:6.300   3rd Qu.:3.000   3rd Qu.:4.60   3rd Qu.:1.500   #>  Max.   :7.000   Max.   :3.400   Max.   :5.10   Max.   :1.800   #> ------------------------------------------------------------  #> iris$Species: virginica #>   Sepal.Length    Sepal.Width     Petal.Length    Petal.Width    #>  Min.   :4.900   Min.   :2.200   Min.   :4.500   Min.   :1.400   #>  1st Qu.:6.225   1st Qu.:2.800   1st Qu.:5.100   1st Qu.:1.800   #>  Median :6.500   Median :3.000   Median :5.550   Median :2.000   #>  Mean   :6.588   Mean   :2.974   Mean   :5.552   Mean   :2.026   #>  3rd Qu.:6.900   3rd Qu.:3.175   3rd Qu.:5.875   3rd Qu.:2.300   #>  Max.   :7.900   Max.   :3.800   Max.   :6.900   Max.   :2.500"},{"path":[]},{"path":"/articles/FuzzyClass.html","id":"sepal-length-vs--sepal-width","dir":"Articles","previous_headings":"Exploratory Data Analysis of the Iris Dataset > Data Visualization","what":"Sepal Length vs. Sepal Width","title":"Using FuzzyClass","text":"’ll create scatter plot visualize relationship sepal length sepal width:","code":"# Scatter plot of sepal length vs. sepal width plot(iris$Sepal.Length, iris$Sepal.Width, col = iris$Species, pch = 19,      xlab = \"Sepal Length\", ylab = \"Sepal Width\", main = \"Sepal Length vs. Sepal Width\") legend(\"topright\", legend = levels(iris$Species), col = 1:3, pch = 19)"},{"path":"/articles/FuzzyClass.html","id":"petal-length-vs--petal-width","dir":"Articles","previous_headings":"Exploratory Data Analysis of the Iris Dataset > Data Visualization","what":"Petal Length vs. Petal Width","title":"Using FuzzyClass","text":"Similarly, let’s visualize relationship petal length petal width:","code":"# Scatter plot of petal length vs. petal width plot(iris$Petal.Length, iris$Petal.Width, col = iris$Species, pch = 19,      xlab = \"Petal Length\", ylab = \"Petal Width\", main = \"Petal Length vs. Petal Width\") legend(\"topright\", legend = levels(iris$Species), col = 1:3, pch = 19)"},{"path":"/articles/FuzzyClass.html","id":"the-classification-problem","dir":"Articles","previous_headings":"","what":"The Classification Problem","title":"Using FuzzyClass","text":"classification problem revolves around categorizing iris flowers three species: setosa, versicolor, virginica. species defined based physical attributes, specifically length width petals sepals. goal create classifier can predict species iris flower given petal sepal measurements.","code":""},{"path":"/articles/FuzzyClass.html","id":"solving-the-problem-with-fuzzyclass","dir":"Articles","previous_headings":"","what":"Solving the Problem with FuzzyClass","title":"Using FuzzyClass","text":"solve classification problem, use FuzzyClass package, offers tools building probabilistic classifiers. package leverages fuzzy logic handle uncertainties variations data. Let’s start loading required libraries preparing data: Next, use Fuzzy Gaussian Naive Bayes algorithm build classifier: Now classifier trained, can evaluate performance testing data: resulting accuracy gives us indication well classifier performs unseen data. conclusion, FuzzyClass package provides powerful toolset solving classification problems fuzzy logic. leveraging probabilistic classifiers like Fuzzy Gaussian Naive Bayes, can effectively handle uncertainties make accurate predictions based intricate data patterns.","code":"library(FuzzyClass)  # Load the iris dataset data(iris)  # Splitting the dataset into training and testing sets set.seed(123) train_index <- sample(nrow(iris), nrow(iris) * 0.7) train_data <- iris[train_index, ] test_data <- iris[-train_index, ] # Build the Fuzzy Gaussian Naive Bayes classifier fit_FGNB <- GauNBFuzzyParam(train = train_data[, -5],                             cl = train_data[, 5], metd = 2, cores = 1) # Make predictions on the testing data predictions <- predict(fit_FGNB, test_data[, -5])  head(predictions) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica  # Calculate the accuracy correct_predictions <- sum(predictions == test_data[, 5]) total_predictions <- nrow(test_data) accuracy <- correct_predictions / total_predictions  accuracy #> [1] 0.9555556"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jodavid Ferreira. Author, maintainer. Ronei Moraes. Contributor. Arthur Ricardo. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ferreira J, Moraes R (2023). “FuzzyClass: family Fuzzy Non-Fuzzy probabilistic-based classifier.” Journal Open Source Software. https://joss.theoj.org/papers/10.21105/joss.05613.","code":"@Article{,   title = {FuzzyClass: A family of Fuzzy and Non-Fuzzy probabilistic-based classifier},   author = {Jodavid Ferreira and Ronei Moraes},   year = {2023},   journal = {Journal of Open Source Software},   url = {https://joss.theoj.org/papers/10.21105/joss.05613}, }"},{"path":"/index.html","id":"fuzzyclass-","dir":"","previous_headings":"","what":"Fuzzy and Non-Fuzzy Classifiers","title":"Fuzzy and Non-Fuzzy Classifiers","text":"Last update: 12-02-2024","code":""},{"path":"/index.html","id":"a-family-of-probabilities-based-classifiers-fuzzy-and-non-fuzzy","dir":"","previous_headings":"","what":"A family of probabilities-based classifiers fuzzy and non-fuzzy","title":"Fuzzy and Non-Fuzzy Classifiers","text":"classification predicament involves assigning labels categories data instances based observed features. Consider, instance, task discriminating “spam” “non-spam” emails. constitutes classification task, algorithm must acquire ability discern patterns distinguish two email types based keywords, structure, attributes. Classification algorithms employ training dataset containing pre-labeled examples learn patterns. faced unclassified data, algorithm applies acquired patterns predict class belong, enabling efficient precise automation categorization new cases. Algorithms like FuzzyClass address task leveraging data probabilities characteristics, thus becoming valuable tools addressing intricate ambiguous classification problems. package manual showcases existing classifiers demonstrates use can found following link: https://cran.r-project.org/package=FuzzyClass/FuzzyClass.pdf","code":""},{"path":"/index.html","id":"dependencies","dir":"","previous_headings":"A family of probabilities-based classifiers fuzzy and non-fuzzy","what":"Dependencies","title":"Fuzzy and Non-Fuzzy Classifiers","text":"list packages FuzzyClass depends. However, installation, FuzzyClass automatically installs dependencies: caTools doParallel e1071 EnvStats foreach MASS maxLik mvtnorm purrr dplyr Rdpack rootSolve","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"A family of probabilities-based classifiers fuzzy and non-fuzzy","what":"Installation","title":"Fuzzy and Non-Fuzzy Classifiers","text":"","code":"# Installation install.packages(\"devtools\") devtools::install_github(\"leapigufpb/FuzzyClass\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"A family of probabilities-based classifiers fuzzy and non-fuzzy","what":"Usage","title":"Fuzzy and Non-Fuzzy Classifiers","text":"installed, can load FuzzyClass package R session:","code":"# Package import library(FuzzyClass)"},{"path":"/index.html","id":"data-reading-and-preparation","dir":"","previous_headings":"A family of probabilities-based classifiers fuzzy and non-fuzzy","what":"Data Reading and Preparation]","title":"Fuzzy and Non-Fuzzy Classifiers","text":"demonstrate usage FuzzyClass, let’s look reading preparing data:","code":"library(FuzzyClass)  #' --------------------------------------------- #' The following shows how the functions are used: #' -------------- #' Reading a database: #' #' Actual training data: data(VirtualRealityData)  VirtualRealityData <- as.data.frame(VirtualRealityData)  # Splitting into Training and Testing split <- caTools::sample.split(t(VirtualRealityData[,1]), SplitRatio = 0.7) Train <- subset(VirtualRealityData, split == \"TRUE\") Test <- subset(VirtualRealityData, split == \"FALSE\") # ----------------  test = Test[,-4]"},{"path":"/index.html","id":"fuzzy-gaussian-naive-bayes-with-fuzzy-parameters","dir":"","previous_headings":"A family of probabilities-based classifiers fuzzy and non-fuzzy > Data Reading and Preparation]","what":"Fuzzy Gaussian Naive Bayes with Fuzzy Parameters","title":"Fuzzy and Non-Fuzzy Classifiers","text":"Let’s delve example using Fuzzy Gaussian Naive Bayes algorithm fuzzy parameters: Additionally, can visualize results: code appears related application classification algorithm called “Fuzzy Gaussian Naive Bayes Fuzzy Parameters.” analysis steps present code: Fuzzy Gaussian Naive Bayes model fitted training data. training set consists attributes (Train[,-4]) classes (Train[,4]), categorical response variable label column 4. predict function used make predictions based fitted model using test set (test). confusion matrix (Table) created using table function. confusion matrix compares actual (expected) classes classes predicted model. accuracy model calculated dividing sum diagonal values confusion matrix (true positives true negatives) total sum confusion matrix. provides measure well model performing predictions. Overall, code performs training Fuzzy Gaussian Naive Bayes model fuzzy parameters, makes predictions using test set, creates confusion matrix evaluate model’s performance, calculates accuracy. enhanced documentation provides comprehensive guide using FuzzyClass package probabilistic classification tasks. covers installation, package usage, data preparation, examples applying Fuzzy Gaussian Naive Bayes algorithm fuzzy parameters. Feel free explore package leverage capabilities classification tasks.","code":"# -------------------------------------------------- # Fuzzy Gaussian Naive Bayes with Fuzzy Parameters   fit_FGNB <- GauNBFuzzyParam(train =  Train[,-4],                                     cl = Train[,4], metd = 2, cores = 1)   print(fit_FGNB) #>  #> Fuzzy Gaussian Naive Bayes Classifier for Discrete Predictors #>  #> Variables: #> [1] \"V1\" \"V2\" \"V3\" #> Class: #> [1] \"1\" \"2\" \"3\" saida <- predict(fit_FGNB, test) Table <- table(factor(Test[,4]), saida) Table #>    saida #>      1  2  3 #>   1 55  8  0 #>   2  5 37 15 #>   3  0 12 48  #Accuracy: sum(diag(Table))/sum(Table) #> [1] 0.7777778  saidaMatrix <- predict(fit_FGNB, test, type = \"matrix\") # -------------------------------------------------- # head view  saida |> head() #> [1] 1 1 1 1 1 2 #> Levels: 1 2 3  saidaMatrix |> head() #>              1           2            3 #> [1,] 0.5196406 0.358530117 1.218292e-01 #> [2,] 0.9938048 0.006187120 8.114985e-06 #> [3,] 0.8180408 0.113152398 6.880676e-02 #> [4,] 0.9393580 0.060364501 2.775356e-04 #> [5,] 0.9905908 0.009398872 1.034470e-05 #> [6,] 0.4666445 0.496515942 3.683955e-02"},{"path":"/index.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to Contribute","title":"Fuzzy and Non-Fuzzy Classifiers","text":"like contribute FuzzyClass, please follow steps: Fork FuzzyClass repository GitHub. Create new branch contribution. Make changes code documentation. Test changes thoroughly. Add update documentation changes. Submit pull request main FuzzyClass repository. FuzzyClass maintainers review pull request may ask make changes merged. pull request merged, contribution available FuzzyClass users.","code":""},{"path":"/index.html","id":"here-are-some-additional-tips-for-contributing-to-fuzzyclass","dir":"","previous_headings":"How to Contribute","what":"Here are some additional tips for contributing to FuzzyClass:","title":"Fuzzy and Non-Fuzzy Classifiers","text":"Please use descriptive commit messages explain changes . making large complex change, please consider creating issue FuzzyClass repository first discuss plans maintainers. Please patient pull request reviewed. maintainers may busy things, get pull request soon can.","code":""},{"path":[]},{"path":"/index.html","id":"reporting-issues","dir":"","previous_headings":"","what":"Reporting Issues","title":"Fuzzy and Non-Fuzzy Classifiers","text":"find bug FuzzyClass, please report creating issue FuzzyClass repository GitHub link: https://github.com/leapigufpb/FuzzyClass/issues. reporting issue, please include following information: clear concise description bug. steps reproduce bug. expected behavior. actual behavior. relevant screenshots code snippets. possible, please also include version FuzzyClass using. FuzzyClass maintainers review issue may ask information can fix bug. bug fixed, new release FuzzyClass made available. additional tips reporting issues FuzzyClass: Please specific possible describing bug. can, try reproduce bug clean installation R. Include output sessionInfo() reporting bug. help maintainers diagnose problem. Please patient issue reviewed. maintainers may busy things, get issue soon can.","code":""},{"path":"/index.html","id":"thank-you-for-your-help-in-making-fuzzyclass-a-better-package","dir":"","previous_headings":"Reporting Issues","what":"Thank you for your help in making FuzzyClass a better package","title":"Fuzzy and Non-Fuzzy Classifiers","text":"hope helps! Let know questions.","code":""},{"path":"/reference/DWFuzzyGammaNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Double Weighted Fuzzy Gamma Naive Bayes — DWFuzzyGammaNaiveBayes","title":"Double Weighted Fuzzy Gamma Naive Bayes — DWFuzzyGammaNaiveBayes","text":"DWFuzzyGammaNaiveBayes Double Weighted Fuzzy Gamma Naive Bayes","code":""},{"path":"/reference/DWFuzzyGammaNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Double Weighted Fuzzy Gamma Naive Bayes — DWFuzzyGammaNaiveBayes","text":"","code":"DWFuzzyGammaNaiveBayes(train, cl, cores = 2, fuzzy = TRUE, wdelta, weta)"},{"path":"/reference/DWFuzzyGammaNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Double Weighted Fuzzy Gamma Naive Bayes — DWFuzzyGammaNaiveBayes","text":"train matrix data frame training set cases. cl factor true classifications training set cores many cores computer want use use prediction (default = 2) fuzzy boolean variable use membership function wdelta vector weight class weta vector  weight feature","code":""},{"path":"/reference/DWFuzzyGammaNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Double Weighted Fuzzy Gamma Naive Bayes — DWFuzzyGammaNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/DWFuzzyGammaNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Double Weighted Fuzzy Gamma Naive Bayes — DWFuzzyGammaNaiveBayes","text":"Moraes RM, Soares EAMG, Machado LS (2020). “double weighted fuzzy gamma naive bayes classifier.” Journal Intelligent & Fuzzy Systems, 38(1), 577--588.","code":""},{"path":"/reference/DWFuzzyGammaNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Double Weighted Fuzzy Gamma Naive Bayes — DWFuzzyGammaNaiveBayes","text":"","code":"set.seed(1) # determining a seed data(GamWeightData)  # Splitting into Training and Testing split <- caTools::sample.split(t(GamWeightData[, 1]), SplitRatio = 0.7) Train <- subset(GamWeightData, split == \"TRUE\") Test <- subset(GamWeightData, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -4] fit_NBT <- DWFuzzyGammaNaiveBayes(   train = Train[, -4],   cl = Train[, 4], cores = 2,   wdelta = c(2.002/6,1.998/6,2.000/6),   weta = c(3/10,2/10, 5/10) )  pred_NBT <- predict(fit_NBT, test)  head(pred_NBT) #> [1] 1 1 1 1 1 1 #> Levels: 1 2 3 head(Test[, 4]) #> [1] 1 1 1 1 1 1 #> Levels: 1 2 3"},{"path":"/reference/ExpNBFuzzyParam.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Exponential Naive Bayes Classifier with Fuzzy parameters — ExpNBFuzzyParam","title":"Fuzzy Exponential Naive Bayes Classifier with Fuzzy parameters — ExpNBFuzzyParam","text":"ExpNBFuzzyParam Fuzzy Exponential Naive Bayes Classifier Fuzzy parameters","code":""},{"path":"/reference/ExpNBFuzzyParam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Exponential Naive Bayes Classifier with Fuzzy parameters — ExpNBFuzzyParam","text":"","code":"ExpNBFuzzyParam(train, cl, alphacut = 1e-04, metd = 2, cores = 2)"},{"path":"/reference/ExpNBFuzzyParam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Exponential Naive Bayes Classifier with Fuzzy parameters — ExpNBFuzzyParam","text":"train matrix data frame training set cases cl factor true classifications training set alphacut value alpha-cut parameter, value 0 1. metd Method transforming triangle scalar, type data entry test sample, use metd 1 want use Yager technique, metd 2 want use Q technique uniformity test (article: Directional Statistics Shape analysis), metd 3 want use Thorani technique cores many cores computer want use use prediction (default = 2)","code":""},{"path":"/reference/ExpNBFuzzyParam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Exponential Naive Bayes Classifier with Fuzzy parameters — ExpNBFuzzyParam","text":"vector classifications","code":""},{"path":"/reference/ExpNBFuzzyParam.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Exponential Naive Bayes Classifier with Fuzzy parameters — ExpNBFuzzyParam","text":"Rodrigues AK, Batista TV, Moraes RM, Machado LS (2016). “new exponential naive bayes classifier fuzzy parameters.” 2016 IEEE International Conference Fuzzy Systems (FUZZ-IEEE), 1188--1194. IEEE.","code":""},{"path":"/reference/ExpNBFuzzyParam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Exponential Naive Bayes Classifier with Fuzzy parameters — ExpNBFuzzyParam","text":"","code":"set.seed(1) # determining a seed data(VirtualRealityData)  # Splitting into Training and Testing split <- caTools::sample.split(t(VirtualRealityData[, 1]), SplitRatio = 0.7) Train <- subset(VirtualRealityData, split == \"TRUE\") Test <- subset(VirtualRealityData, split == \"FALSE\")  # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -4] fit_FENB <- ExpNBFuzzyParam(   train = Train[, -4],   cl = Train[, 4], metd = 1, cores = 2 )  pred_FENB <- predict(fit_FENB, test)  head(pred_FENB) #> [1] 1 1 1 1 1 1 #> Levels: 1 2 3 head(Test[, 4]) #> [1] 1 1 1 1 1 1"},{"path":"/reference/FuzzyBayesRule.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Bayes Rule — FuzzyBayesRule","title":"Fuzzy Bayes Rule — FuzzyBayesRule","text":"FuzzyBayesRule Fuzzy Bayes Rule","code":""},{"path":"/reference/FuzzyBayesRule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Bayes Rule — FuzzyBayesRule","text":"","code":"FuzzyBayesRule(train, cl, cores = 2, fuzzy = TRUE)"},{"path":"/reference/FuzzyBayesRule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Bayes Rule — FuzzyBayesRule","text":"train matrix data frame training set cases. cl factor true classifications training set cores many cores computer want use use prediction (default = 2) fuzzy boolean variable use membership function","code":""},{"path":"/reference/FuzzyBayesRule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Bayes Rule — FuzzyBayesRule","text":"vector classifications","code":""},{"path":"/reference/FuzzyBayesRule.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Bayes Rule — FuzzyBayesRule","text":"Moraes R, Machado L (2008). “Fuzzy Bayes Rule -Line Training Assessment Virtual Reality Simulators.” Multiple-Valued Logic Soft Computing, 14, 325-338.","code":""},{"path":"/reference/FuzzyBayesRule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Bayes Rule — FuzzyBayesRule","text":"","code":"set.seed(1) # determining a seed data(iris)  # Splitting into Training and Testing split <- caTools::sample.split(t(iris[, 1]), SplitRatio = 0.7) Train <- subset(iris, split == \"TRUE\") Test <- subset(iris, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -5] fit_NBT <- FuzzyBayesRule(   train = Train[, -5],   cl = Train[, 5], cores = 2 )  pred_NBT <- predict(fit_NBT, test)  head(pred_NBT) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica head(Test[, 5]) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica"},{"path":"/reference/FuzzyBetaNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Beta Naive Bayes — FuzzyBetaNaiveBayes","title":"Fuzzy Beta Naive Bayes — FuzzyBetaNaiveBayes","text":"FuzzyBetaNaiveBayes Fuzzy Beta Naive Bayes","code":""},{"path":"/reference/FuzzyBetaNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Beta Naive Bayes — FuzzyBetaNaiveBayes","text":"","code":"FuzzyBetaNaiveBayes(train, cl, cores = 2, fuzzy = TRUE)"},{"path":"/reference/FuzzyBetaNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Beta Naive Bayes — FuzzyBetaNaiveBayes","text":"train matrix data frame training set cases. cl factor true classifications training set cores many cores computer want use use prediction (default = 2) fuzzy boolean variable use membership function","code":""},{"path":"/reference/FuzzyBetaNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Beta Naive Bayes — FuzzyBetaNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/FuzzyBetaNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Beta Naive Bayes — FuzzyBetaNaiveBayes","text":"Moraes RM, Rodrigues AKG, Soares EAMG, Machado LS (2020). “new fuzzy beta naive Bayes classifier.” Developments Artificial Intelligence Technologies Computation Robotics: Proceedings 14th International FLINS Conference (FLINS 2020), 437--445. World Scientific.","code":""},{"path":"/reference/FuzzyBetaNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Beta Naive Bayes — FuzzyBetaNaiveBayes","text":"","code":"set.seed(1) # determining a seed data(iris)  # Splitting into Training and Testing split <- caTools::sample.split(t(iris[, 1]), SplitRatio = 0.7) Train <- subset(iris, split == \"TRUE\") Test <- subset(iris, split == \"FALSE\") #---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -5] fit_NBT <- FuzzyBetaNaiveBayes(   train = Train[, -5],   cl = Train[, 5], cores = 2 )  pred_NBT <- predict(fit_NBT, test)  head(pred_NBT) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica head(Test[, 5]) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica"},{"path":"/reference/FuzzyBinomialNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Binomial Naive Bayes — FuzzyBinomialNaiveBayes","title":"Fuzzy Binomial Naive Bayes — FuzzyBinomialNaiveBayes","text":"FuzzyBinomialNaiveBayes Fuzzy Binomial Naive Bayes","code":""},{"path":"/reference/FuzzyBinomialNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Binomial Naive Bayes — FuzzyBinomialNaiveBayes","text":"","code":"FuzzyBinomialNaiveBayes(train, cl, cores = 2, fuzzy = TRUE)"},{"path":"/reference/FuzzyBinomialNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Binomial Naive Bayes — FuzzyBinomialNaiveBayes","text":"train matrix data frame training set cases. cl factor true classifications training set cores many cores computer want use use prediction (default = 2) fuzzy boolean variable use membership function","code":""},{"path":"/reference/FuzzyBinomialNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Binomial Naive Bayes — FuzzyBinomialNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/FuzzyBinomialNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Binomial Naive Bayes — FuzzyBinomialNaiveBayes","text":"Moraes RM, Machado LS (2016). “Fuzzy Binomial Naive Bayes classifier epidemiological data.” 2016 IEEE International Conference Fuzzy Systems (FUZZ-IEEE), 745--750. IEEE.","code":""},{"path":"/reference/FuzzyBinomialNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Binomial Naive Bayes — FuzzyBinomialNaiveBayes","text":"","code":"set.seed(1) # determining a seed class1 <- data.frame(vari1 = rbinom(100,size = 10, prob = 0.2),                      vari2 = rbinom(100,size = 10, prob = 0.2),                     vari3 = rbinom(100,size = 10, prob = 0.2), class = 1) class2 <- data.frame(vari1 = rbinom(100,size = 10, prob = 0.5),                      vari2 = rbinom(100,size = 10, prob = 0.5),                     vari3 = rbinom(100,size = 10, prob = 0.5), class = 2) class3 <- data.frame(vari1 = rbinom(100,size = 10, prob = 0.8),                      vari2 = rbinom(100,size = 10, prob = 0.8),                      vari3 = rbinom(100,size = 10, prob = 0.8), class = 3) data <- rbind(class1,class2,class3)  # Splitting into Training and Testing split <- caTools::sample.split(t(data[, 1]), SplitRatio = 0.7) Train <- subset(data, split == \"TRUE\") Test <- subset(data, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -4] fit_NBT <- FuzzyBinomialNaiveBayes(   train = Train[, -4],   cl = Train[, 4], cores = 2 )  pred_NBT <- predict(fit_NBT, test)  head(pred_NBT) #> [1] 1 1 1 1 1 1 #> Levels: 1 2 3 head(Test[, 4]) #> [1] 1 1 1 1 1 1"},{"path":"/reference/FuzzyClass-package.html","id":null,"dir":"Reference","previous_headings":"","what":"FuzzyClass: Fuzzy and Non-Fuzzy Classifiers — FuzzyClass-package","title":"FuzzyClass: Fuzzy and Non-Fuzzy Classifiers — FuzzyClass-package","text":"provides classifiers can used discrete variables continuous variables based Naive Bayes Fuzzy Naive Bayes hypothesis. methods developed researchers belong 'Laboratory Technologies Virtual Teaching Statistics (LabTEVE)' 'Laboratory Applied Statistics Image Processing Geoprocessing (LEAPIG)' 'Federal University Paraiba, Brazil'. considered statistical distributions papers published scientific literature, instance, Gaussian classifier using fuzzy parameters, proposed 'Moraes, Ferreira Machado' (2021) doi:10.1007/s40815-020-00936-4 .","code":""},{"path":[]},{"path":"/reference/FuzzyClass-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"FuzzyClass: Fuzzy and Non-Fuzzy Classifiers — FuzzyClass-package","text":"Maintainer: Jodavid Ferreira jodavid@protonmail.com (ORCID) contributors: Ronei Moraes ronei@de.ufpb.br (ORCID) [contributor] Arthur Ricardo arthur.ricardo17@gmail.com [contributor]","code":""},{"path":"/reference/FuzzyExponentialNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Exponential Naive Bayes — FuzzyExponentialNaiveBayes","title":"Fuzzy Exponential Naive Bayes — FuzzyExponentialNaiveBayes","text":"FuzzyExponentialNaiveBayes Fuzzy Exponential Naive Bayes","code":""},{"path":"/reference/FuzzyExponentialNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Exponential Naive Bayes — FuzzyExponentialNaiveBayes","text":"","code":"FuzzyExponentialNaiveBayes(train, cl, cores = 2, fuzzy = TRUE)"},{"path":"/reference/FuzzyExponentialNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Exponential Naive Bayes — FuzzyExponentialNaiveBayes","text":"train matrix data frame training set cases. cl factor true classifications training set cores many cores computer want use use prediction (default = 2) fuzzy boolean variable use membership function","code":""},{"path":"/reference/FuzzyExponentialNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Exponential Naive Bayes — FuzzyExponentialNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/FuzzyExponentialNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Exponential Naive Bayes — FuzzyExponentialNaiveBayes","text":"Moraes RM, Machado LS (2016). “fuzzy exponential naive bayes classifier.” Uncertainty Modelling Knowledge Engineering Decision Making: Proceedings 12th International FLINS Conference, 207--212. World Scientific.","code":""},{"path":"/reference/FuzzyExponentialNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Exponential Naive Bayes — FuzzyExponentialNaiveBayes","text":"","code":"set.seed(1) # determining a seed data(iris)  # Splitting into Training and Testing split <- caTools::sample.split(t(iris[, 1]), SplitRatio = 0.7) Train <- subset(iris, split == \"TRUE\") Test <- subset(iris, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -5] fit_NBT <- FuzzyExponentialNaiveBayes(   train = Train[, -5],   cl = Train[, 5], cores = 2 )  pred_NBT <- predict(fit_NBT, test)  head(pred_NBT) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica head(Test[, 5]) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica"},{"path":"/reference/FuzzyGammaNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Gamma Naive Bayes — FuzzyGammaNaiveBayes","title":"Fuzzy Gamma Naive Bayes — FuzzyGammaNaiveBayes","text":"FuzzyGammaNaiveBayes Fuzzy Gamma Naive Bayes","code":""},{"path":"/reference/FuzzyGammaNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Gamma Naive Bayes — FuzzyGammaNaiveBayes","text":"","code":"FuzzyGammaNaiveBayes(train, cl, cores = 2, fuzzy = TRUE)"},{"path":"/reference/FuzzyGammaNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Gamma Naive Bayes — FuzzyGammaNaiveBayes","text":"train matrix data frame training set cases. cl factor true classifications training set cores many cores computer want use use prediction (default = 2) fuzzy boolean variable use membership function","code":""},{"path":"/reference/FuzzyGammaNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Gamma Naive Bayes — FuzzyGammaNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/FuzzyGammaNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Gamma Naive Bayes — FuzzyGammaNaiveBayes","text":"Moraes RM, Soares EAMG, Machado LS (2018). “Fuzzy Gamma Naive Bayes Classifier.” Data Science Knowledge Engineering Sensing Decision Support: Proceedings 13th International FLINS Conference (FLINS 2018), 691--699. World Scientific.","code":""},{"path":"/reference/FuzzyGammaNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Gamma Naive Bayes — FuzzyGammaNaiveBayes","text":"","code":"set.seed(1) # determining a seed data(iris)  # Splitting into Training and Testing split <- caTools::sample.split(t(iris[, 1]), SplitRatio = 0.7) Train <- subset(iris, split == \"TRUE\") Test <- subset(iris, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -5] fit_NBT <- FuzzyGammaNaiveBayes(   train = Train[, -5],   cl = Train[, 5], cores = 2 )  pred_NBT <- predict(fit_NBT, test)  head(pred_NBT) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica head(Test[, 5]) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica"},{"path":"/reference/FuzzyGaussianNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Gaussian Naive Bayes Classifier Zadeh-based — FuzzyGaussianNaiveBayes","title":"Fuzzy Gaussian Naive Bayes Classifier Zadeh-based — FuzzyGaussianNaiveBayes","text":"FuzzyGaussianNaiveBayes Fuzzy Gaussian Naive Bayes Classifier Zadeh-based","code":""},{"path":"/reference/FuzzyGaussianNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Gaussian Naive Bayes Classifier Zadeh-based — FuzzyGaussianNaiveBayes","text":"","code":"FuzzyGaussianNaiveBayes(train, cl, cores = 2, fuzzy = TRUE)"},{"path":"/reference/FuzzyGaussianNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Gaussian Naive Bayes Classifier Zadeh-based — FuzzyGaussianNaiveBayes","text":"train matrix data frame training set cases. cl factor true classifications training set cores many cores computer want use use prediction (default = 2) fuzzy boolean variable use membership function","code":""},{"path":"/reference/FuzzyGaussianNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Gaussian Naive Bayes Classifier Zadeh-based — FuzzyGaussianNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/FuzzyGaussianNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Gaussian Naive Bayes Classifier Zadeh-based — FuzzyGaussianNaiveBayes","text":"Moraes RM, Machado LS (2012). “Online Assessment Medical Simulators Based Virtual Reality Using Fuzzy Gaussian Naive Bayes.” Journal Multiple-Valued Logic & Soft Computing, 18.","code":""},{"path":"/reference/FuzzyGaussianNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Gaussian Naive Bayes Classifier Zadeh-based — FuzzyGaussianNaiveBayes","text":"","code":"set.seed(1) # determining a seed data(iris)  # Splitting into Training and Testing split <- caTools::sample.split(t(iris[, 1]), SplitRatio = 0.7) Train <- subset(iris, split == \"TRUE\") Test <- subset(iris, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -5] fit_GNB <- FuzzyGaussianNaiveBayes(   train = Train[, -5],   cl = Train[, 5], cores = 2 )  pred_GNB <- predict(fit_GNB, test)  head(pred_GNB) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica head(Test[, 5]) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica"},{"path":"/reference/FuzzyGeoNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Naive Bayes Geometric Classifier — FuzzyGeoNaiveBayes","title":"Fuzzy Naive Bayes Geometric Classifier — FuzzyGeoNaiveBayes","text":"FuzzyGeoNaiveBayes Naive Bayes Geometric Classifier","code":""},{"path":"/reference/FuzzyGeoNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Naive Bayes Geometric Classifier — FuzzyGeoNaiveBayes","text":"","code":"FuzzyGeoNaiveBayes(train, cl, cores = 2, fuzzy = T)"},{"path":"/reference/FuzzyGeoNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Naive Bayes Geometric Classifier — FuzzyGeoNaiveBayes","text":"train matrix data frame training set cases. cl factor true classifications training set cores many cores computer want use (default = 2) fuzzy boolean variable use membership function","code":""},{"path":"/reference/FuzzyGeoNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Naive Bayes Geometric Classifier — FuzzyGeoNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/FuzzyGeoNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Naive Bayes Geometric Classifier — FuzzyGeoNaiveBayes","text":"Ferreira J, Lopes , Machado L, Moraes R (2023). “Novel Fuzzy Geometric Naive Bayes Network Online Skills Assessment Training Based Virtual Reality.” Proceedings 15th International Joint Conference Computational Intelligence, 395--401.","code":""},{"path":"/reference/FuzzyGeoNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Naive Bayes Geometric Classifier — FuzzyGeoNaiveBayes","text":"","code":"set.seed(1) # determining a seed class1 <- data.frame(vari1 = rgeom(100,prob = 0.2),                      vari2 = rgeom(100,prob = 0.2),                      vari3 = rgeom(100,prob = 0.2), class = 1) class2 <- data.frame(vari1 = rgeom(100,prob = 0.5),                      vari2 = rgeom(100,prob = 0.5),                      vari3 = rgeom(100,prob = 0.5), class = 2) class3 <- data.frame(vari1 = rgeom(100,prob = 0.9),                      vari2 = rgeom(100,prob = 0.9),                      vari3 = rgeom(100,prob = 0.9), class = 3) data <- rbind(class1,class2,class3)  # Splitting into Training and Testing split <- caTools::sample.split(t(data[, 1]), SplitRatio = 0.7) Train <- subset(data, split == \"TRUE\") Test <- subset(data, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -4] fit_NBT <- FuzzyGeoNaiveBayes(   train = Train[, -4],   cl = Train[, 4], cores = 2 )  pred_NBT <- predict(fit_NBT, test)  head(pred_NBT) #> [1] 2 1 2 2 1 1 #> Levels: 1 2 3 head(Test[, 4]) #> [1] 1 1 1 1 1 1"},{"path":"/reference/FuzzyNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Naive Bayes — FuzzyNaiveBayes","title":"Fuzzy Naive Bayes — FuzzyNaiveBayes","text":"FuzzyNaiveBayes Fuzzy Naive Bayes","code":""},{"path":"/reference/FuzzyNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Naive Bayes — FuzzyNaiveBayes","text":"","code":"FuzzyNaiveBayes(train, cl, fuzzy = TRUE, m = NULL, Pi = NULL)"},{"path":"/reference/FuzzyNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Naive Bayes — FuzzyNaiveBayes","text":"train matrix data frame training set cases cl factor true classifications training set fuzzy boolean variable use membership function m M/N, M number classes N number train lines Pi 1/M, M number classes","code":""},{"path":"/reference/FuzzyNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Naive Bayes — FuzzyNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/FuzzyNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Naive Bayes — FuzzyNaiveBayes","text":"Moraes RM, Machado LS (2009). “Another approach fuzzy naive bayes applied online training assessment virtual reality simulators.” Proceedings Safety Health Environmental World Congress, 62--66.","code":""},{"path":"/reference/FuzzyNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Naive Bayes — FuzzyNaiveBayes","text":"","code":"# Example Fuzzy with Discrete Features set.seed(1) # determining a seed data(HouseVotes84)  # Splitting into Training and Testing split <- caTools::sample.split(t(HouseVotes84[, 1]), SplitRatio = 0.7) Train <- subset(HouseVotes84, split == \"TRUE\") Test <- subset(HouseVotes84, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -1] fit_FNB <- FuzzyNaiveBayes(   train = Train[, -1],   cl = Train[, 1] )  pred_FNB <- predict(fit_FNB, test)  head(pred_FNB) #> [1] republican democrat   republican republican republican democrat   #> Levels: democrat republican head(Test[, 1]) #> [1] democrat   democrat   democrat   republican republican democrat   #> Levels: democrat republican   # Example Fuzzy with Continuous Features set.seed(1) # determining a seed data(iris)  # Splitting into Training and Testing split <- caTools::sample.split(t(iris[, 1]), SplitRatio = 0.7) Train <- subset(iris, split == \"TRUE\") Test <- subset(iris, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -5] fit_FNB <- FuzzyNaiveBayes(   train = Train[, -5],   cl = Train[, 5] )  pred_FNB <- predict(fit_FNB, test)  head(pred_FNB) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica head(Test[, 5]) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica"},{"path":"/reference/FuzzyPoissonNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Poisson Naive Bayes — FuzzyPoissonNaiveBayes","title":"Fuzzy Poisson Naive Bayes — FuzzyPoissonNaiveBayes","text":"FuzzyPoissonNaiveBayes Fuzzy Poisson Naive Bayes","code":""},{"path":"/reference/FuzzyPoissonNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Poisson Naive Bayes — FuzzyPoissonNaiveBayes","text":"","code":"FuzzyPoissonNaiveBayes(train, cl, cores = 2, fuzzy = TRUE)"},{"path":"/reference/FuzzyPoissonNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Poisson Naive Bayes — FuzzyPoissonNaiveBayes","text":"train matrix data frame training set cases. cl factor true classifications training set cores many cores computer want use use prediction (default = 2) fuzzy boolean variable use membership function","code":""},{"path":"/reference/FuzzyPoissonNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Poisson Naive Bayes — FuzzyPoissonNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/FuzzyPoissonNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Poisson Naive Bayes — FuzzyPoissonNaiveBayes","text":"Moraes RM, Machado LS (2015). “fuzzy poisson naive bayes classifier epidemiological purposes.” 2015 7th International Joint Conference Computational Intelligence (IJCCI), volume 2, 193--198. IEEE.","code":""},{"path":"/reference/FuzzyPoissonNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Poisson Naive Bayes — FuzzyPoissonNaiveBayes","text":"","code":"set.seed(1) # determining a seed class1 <- data.frame(vari1 = rpois(100,lambda = 2),                      vari2 = rpois(100,lambda = 2),                      vari3 = rpois(100,lambda = 2), class = 1) class2 <- data.frame(vari1 = rpois(100,lambda = 1),                      vari2 = rpois(100,lambda = 1),                      vari3 = rpois(100,lambda = 1), class = 2) class3 <- data.frame(vari1 = rpois(100,lambda = 5),                      vari2 = rpois(100,lambda = 5),                      vari3 = rpois(100,lambda = 5), class = 3) data <- rbind(class1,class2,class3)  # Splitting into Training and Testing split <- caTools::sample.split(t(data[, 1]), SplitRatio = 0.7) Train <- subset(data, split == \"TRUE\") Test <- subset(data, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -4] fit_NBT <- FuzzyPoissonNaiveBayes(   train = Train[, -4],   cl = Train[, 4], cores = 2 )  pred_NBT <- predict(fit_NBT, test)  head(pred_NBT) #> [1] 1 2 1 1 3 1 #> Levels: 1 2 3 head(Test[, 4]) #> [1] 1 1 1 1 1 1"},{"path":"/reference/FuzzyTrapezoidalNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Naive Bayes Trapezoidal Classifier — FuzzyTrapezoidalNaiveBayes","title":"Fuzzy Naive Bayes Trapezoidal Classifier — FuzzyTrapezoidalNaiveBayes","text":"FuzzyTrapezoidalNaiveBayes Fuzzy Naive Bayes Trapezoidal Classifier","code":""},{"path":"/reference/FuzzyTrapezoidalNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Naive Bayes Trapezoidal Classifier — FuzzyTrapezoidalNaiveBayes","text":"","code":"FuzzyTrapezoidalNaiveBayes(train, cl, cores = 2, fuzzy = T)"},{"path":"/reference/FuzzyTrapezoidalNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Naive Bayes Trapezoidal Classifier — FuzzyTrapezoidalNaiveBayes","text":"train matrix data frame training set cases. cl factor true classifications training set cores many cores computer want use use prediction (default = 2) fuzzy boolean variable use membership function","code":""},{"path":"/reference/FuzzyTrapezoidalNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Naive Bayes Trapezoidal Classifier — FuzzyTrapezoidalNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/FuzzyTrapezoidalNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Naive Bayes Trapezoidal Classifier — FuzzyTrapezoidalNaiveBayes","text":"Lopes , Ferreira J, Machado LS, Moraes RM (2022). “New Fuzzy Trapezoidal Naive Bayes Network basis Assessment Training based Virtual Reality.” 15th International FLINS Conference Machine learning, Multi agent Cyber physical systems (FLINS 2022). Nankai University.","code":""},{"path":"/reference/FuzzyTrapezoidalNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Naive Bayes Trapezoidal Classifier — FuzzyTrapezoidalNaiveBayes","text":"","code":"set.seed(1) # determining a seed data(iris)  # Splitting into Training and Testing split <- caTools::sample.split(t(iris[, 1]), SplitRatio = 0.7) Train <- subset(iris, split == \"TRUE\") Test <- subset(iris, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -5] fit_NBT <- FuzzyTrapezoidalNaiveBayes(   train = Train[, -5],   cl = Train[, 5], cores = 2 )  pred_NBT <- predict(fit_NBT, test)  head(pred_NBT) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica head(Test[, 5]) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica"},{"path":"/reference/FuzzyTriangularNaiveBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Naive Bayes Triangular Classifier — FuzzyTriangularNaiveBayes","title":"Fuzzy Naive Bayes Triangular Classifier — FuzzyTriangularNaiveBayes","text":"FuzzyTriangularNaiveBayes Fuzzy Naive Bayes Triangular Classifier","code":""},{"path":"/reference/FuzzyTriangularNaiveBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Naive Bayes Triangular Classifier — FuzzyTriangularNaiveBayes","text":"","code":"FuzzyTriangularNaiveBayes(train, cl, cores = 2, fuzzy = TRUE)"},{"path":"/reference/FuzzyTriangularNaiveBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Naive Bayes Triangular Classifier — FuzzyTriangularNaiveBayes","text":"train matrix data frame training set cases. cl factor true classifications training set cores many cores computer want use use prediction (default = 2) fuzzy boolean variable use membership function","code":""},{"path":"/reference/FuzzyTriangularNaiveBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Naive Bayes Triangular Classifier — FuzzyTriangularNaiveBayes","text":"vector classifications","code":""},{"path":"/reference/FuzzyTriangularNaiveBayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Naive Bayes Triangular Classifier — FuzzyTriangularNaiveBayes","text":"Moraes RM, Silva ILA, Machado LS (2020). “Online skills assessment training based virtual reality using novel fuzzy triangular naive Bayes network.” Developments Artificial Intelligence Technologies Computation Robotics: Proceedings 14th International FLINS Conference (FLINS 2020), 446--454. World Scientific.","code":""},{"path":"/reference/FuzzyTriangularNaiveBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Naive Bayes Triangular Classifier — FuzzyTriangularNaiveBayes","text":"","code":"set.seed(1) # determining a seed data(iris)  # Splitting into Training and Testing split <- caTools::sample.split(t(iris[, 1]), SplitRatio = 0.7) Train <- subset(iris, split == \"TRUE\") Test <- subset(iris, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -5] fit_NBT <- FuzzyTriangularNaiveBayes(   train = Train[, -5],   cl = Train[, 5], cores = 2 )  pred_NBT <- predict(fit_NBT, test)  head(pred_NBT) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica head(Test[, 5]) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica"},{"path":"/reference/GamWeightData.html","id":null,"dir":"Reference","previous_headings":"","what":"Gamma Weighted Data — GamWeightData","title":"Gamma Weighted Data — GamWeightData","text":"dataset simulated containing training data Gamma Distribution","code":""},{"path":"/reference/GamWeightData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gamma Weighted Data — GamWeightData","text":"","code":"GamWeightData"},{"path":"/reference/GamWeightData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gamma Weighted Data — GamWeightData","text":"dataset 600 rows 4 variables 1 label.","code":""},{"path":"/reference/GauNBFuzzyParam.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Gaussian Naive Bayes Classifier with Fuzzy parameters — GauNBFuzzyParam","title":"Fuzzy Gaussian Naive Bayes Classifier with Fuzzy parameters — GauNBFuzzyParam","text":"GauNBFuzzyParam Fuzzy Gaussian Naive Bayes Classifier Fuzzy parameters","code":""},{"path":"/reference/GauNBFuzzyParam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Gaussian Naive Bayes Classifier with Fuzzy parameters — GauNBFuzzyParam","text":"","code":"GauNBFuzzyParam(train, cl, alphacut = 1e-04, metd = 2, cores = 2)"},{"path":"/reference/GauNBFuzzyParam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Gaussian Naive Bayes Classifier with Fuzzy parameters — GauNBFuzzyParam","text":"train matrix data frame training set cases. cl factor true classifications training set alphacut value alpha-cut parameter, value 0 1. metd Method transforming triangle scalar, type data entry test sample, use metd 1 want use Yager technique, metd 2 want use Q technique uniformity test (article: Directional Statistics Shape analysis), metd 3 want use Thorani technique cores many cores computer want use use prediction (default = 2)","code":""},{"path":"/reference/GauNBFuzzyParam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Gaussian Naive Bayes Classifier with Fuzzy parameters — GauNBFuzzyParam","text":"vector classifications","code":""},{"path":"/reference/GauNBFuzzyParam.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Gaussian Naive Bayes Classifier with Fuzzy parameters — GauNBFuzzyParam","text":"Moraes RM, Ferreira JA, Machado LS (2021). “New Bayesian Network Based Gaussian Naive Bayes Fuzzy Parameters Training Assessment Virtual Simulators.” International Journal Fuzzy Systems, 23(3), 849--861.","code":""},{"path":"/reference/GauNBFuzzyParam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Gaussian Naive Bayes Classifier with Fuzzy parameters — GauNBFuzzyParam","text":"","code":"set.seed(1) # determining a seed data(iris)  # Splitting into Training and Testing split <- caTools::sample.split(t(iris[, 1]), SplitRatio = 0.7) Train <- subset(iris, split == \"TRUE\") Test <- subset(iris, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -5] fit_FGNB <- GauNBFuzzyParam(   train = Train[, -5],   cl = Train[, 5], metd = 1, cores = 2 )  pred_FGNB <- predict(fit_FGNB, test)  head(pred_FGNB) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica head(Test[, 5]) #> [1] setosa setosa setosa setosa setosa setosa #> Levels: setosa versicolor virginica"},{"path":"/reference/HouseVotes84.html","id":null,"dir":"Reference","previous_headings":"","what":"United States Congressional Voting Records 1984 — HouseVotes84","title":"United States Congressional Voting Records 1984 — HouseVotes84","text":"data set includes votes U.S. House     Representatives Congressmen 16 key votes identified     CQA.  CQA lists nine different types votes: voted , paired     , announced (three simplified yea), voted     , paired , announced (three     simplified nay), voted present, voted present avoid conflict     interest, vote otherwise make position known     (three simplified unknown disposition).","code":""},{"path":"/reference/HouseVotes84.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"United States Congressional Voting Records 1984 — HouseVotes84","text":"","code":"data(HouseVotes84)"},{"path":"/reference/HouseVotes84.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"United States Congressional Voting Records 1984 — HouseVotes84","text":"data frame 435 observations 17 variables:","code":""},{"path":"/reference/HouseVotes84.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"United States Congressional Voting Records 1984 — HouseVotes84","text":"Source: Congressional Quarterly Almanac, 98th Congress, \t2nd session 1984, Volume XL: Congressional Quarterly Inc., \tington, D.C., 1985 Donor: Jeff Schlimmer (Jeffrey.Schlimmer@.gp.cs.cmu.edu) data taken UCI Repository Machine Learning     Databases https://archive.ics.uci.edu/datasets https://archive.ics.uci.edu/datasets converted R format Friedrich Leisch.","code":""},{"path":"/reference/HouseVotes84.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"United States Congressional Voting Records 1984 — HouseVotes84","text":"Newman, D.J. & Hettich, S. & Blake, C.L. & Merz, C.J. (1998).   UCI Repository machine learning databases   [https://archive.ics.uci.edu/datasets]. Irvine, CA:   University California, Department Information Computer   Science.","code":""},{"path":"/reference/HouseVotes84.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"United States Congressional Voting Records 1984 — HouseVotes84","text":"","code":"data(HouseVotes84) summary(HouseVotes84) #>         Class        V1         V2         V3         V4         V5      #>  democrat  :267   n   :236   n   :192   n   :171   n   :247   n   :208   #>  republican:168   y   :187   y   :195   y   :253   y   :177   y   :212   #>                   NA's: 12   NA's: 48   NA's: 11   NA's: 11   NA's: 15   #>     V6         V7         V8         V9        V10        V11        V12      #>  n   :152   n   :182   n   :178   n   :206   n   :212   n   :264   n   :233   #>  y   :272   y   :239   y   :242   y   :207   y   :216   y   :150   y   :171   #>  NA's: 11   NA's: 14   NA's: 15   NA's: 22   NA's:  7   NA's: 21   NA's: 31   #>    V13        V14        V15        V16      #>  n   :201   n   :170   n   :233   n   : 62   #>  y   :209   y   :248   y   :174   y   :269   #>  NA's: 25   NA's: 17   NA's: 28   NA's:104"},{"path":"/reference/PoiNBFuzzyParam.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Poisson Naive Bayes Classifier with Fuzzy parameters — PoiNBFuzzyParam","title":"Fuzzy Poisson Naive Bayes Classifier with Fuzzy parameters — PoiNBFuzzyParam","text":"PoiNBFuzzyParam Fuzzy Poisson Naive Bayes Classifier Fuzzy parameters","code":""},{"path":"/reference/PoiNBFuzzyParam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Poisson Naive Bayes Classifier with Fuzzy parameters — PoiNBFuzzyParam","text":"","code":"PoiNBFuzzyParam(train, cl, alphacut = 1e-04, metd = 2, cores = 2)"},{"path":"/reference/PoiNBFuzzyParam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Poisson Naive Bayes Classifier with Fuzzy parameters — PoiNBFuzzyParam","text":"train matrix data frame training set cases. cl factor true classifications training set alphacut value alpha-cut parameter, value 0 1. metd Method transforming triangle scalar, type data entry test sample, use metd 1 want use Yager technique, metd 2 want use Q technique uniformity test (article: Directional Statistics Shape analysis), metd 3 want use Thorani technique cores many cores computer want use use prediction (default = 2)","code":""},{"path":"/reference/PoiNBFuzzyParam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Poisson Naive Bayes Classifier with Fuzzy parameters — PoiNBFuzzyParam","text":"vector classifications","code":""},{"path":"/reference/PoiNBFuzzyParam.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Poisson Naive Bayes Classifier with Fuzzy parameters — PoiNBFuzzyParam","text":"Soares E, Machado L, Moraes R (2016). “Assessment poisson naive bayes classifier fuzzy parameters using data different statistical distributions.” IV Bazilian Congress Fuzzy Sistems (CBSF 2016), volume 1, 57--68.","code":""},{"path":"/reference/PoiNBFuzzyParam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Poisson Naive Bayes Classifier with Fuzzy parameters — PoiNBFuzzyParam","text":"","code":"set.seed(1) # determining a seed class1 <- data.frame(vari1 = rpois(100,lambda = 2),                      vari2 = rpois(100,lambda = 2),                      vari3 = rpois(100,lambda = 2), class = 1) class2 <- data.frame(vari1 = rpois(100,lambda = 1),                      vari2 = rpois(100,lambda = 1),                      vari3 = rpois(100,lambda = 1), class = 2) class3 <- data.frame(vari1 = rpois(100,lambda = 5),                      vari2 = rpois(100,lambda = 5),                      vari3 = rpois(100,lambda = 5), class = 3) data <- rbind(class1,class2,class3)  # Splitting into Training and Testing split <- caTools::sample.split(t(data[, 1]), SplitRatio = 0.7) Train <- subset(data, split == \"TRUE\") Test <- subset(data, split == \"FALSE\") # ---------------- # matrix or data frame of test set cases. # A vector will be interpreted as a row vector for a single case. test <- Test[, -4] fit_FPoiNB <- PoiNBFuzzyParam(   train = Train[, -4],   cl = Train[, 4], metd = 1, cores = 2 )  pred_FPoiNB <- predict(fit_FPoiNB, test)  head(pred_FPoiNB) #> [1] 2 2 2 1 3 2 #> Levels: 1 2 3 head(Test[, 4]) #> [1] 1 1 1 1 1 1"},{"path":"/reference/SimulatedData.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Data — SimulatedData","title":"Simulated Data — SimulatedData","text":"dataset containing training data Gammma Distribuition","code":""},{"path":"/reference/SimulatedData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Data — SimulatedData","text":"","code":"SimulatedData"},{"path":"/reference/SimulatedData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Data — SimulatedData","text":"dataset 600 rows 4 variables 1 label.","code":""},{"path":"/reference/VirtualRealityData.html","id":null,"dir":"Reference","previous_headings":"","what":"Virtual Reality Simulator Data — VirtualRealityData","title":"Virtual Reality Simulator Data — VirtualRealityData","text":"dataset containing training data virtual reality simulator","code":""},{"path":"/reference/VirtualRealityData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Virtual Reality Simulator Data — VirtualRealityData","text":"","code":"VirtualRealityData"},{"path":"/reference/VirtualRealityData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Virtual Reality Simulator Data — VirtualRealityData","text":"dataset 600 rows 4 variables 1 label.","code":""},{"path":"/reference/hidden_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Rule-based System — Set.Universe","title":"Fuzzy Rule-based System — Set.Universe","text":"FuzzyRuleBasedSystem Fuzzy Rule-based System","code":""},{"path":"/reference/hidden_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Rule-based System — Set.Universe","text":"","code":"Set.Universe(minX, maxX)  TriFS(U, a, b, c)  TraFS(U, a, b, c, d)  GauFS(U, m, s)  uniFS(U, FS, FS1, FS2)  compFS(U, FS)  dmFS(x, U, FS)  centroidFS(U, FS)  OR(FRBS, x, y)  AND(FRBS, x, y)  NOT(FRBS, x)  Implication(FRBS, x, U, FS)  Aggregation(FRBS, U, Lst)  plotFS(Universe, FS)"},{"path":"/reference/hidden_functions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuzzy Rule-based System — Set.Universe","text":"Moraes RM, Rodrigues AKG, Soares EAMG, Machado LS (2020). “new fuzzy beta naive Bayes classifier.” Developments Artificial Intelligence Technologies Computation Robotics: Proceedings 14th International FLINS Conference (FLINS 2020), 437--445. World Scientific.","code":""},{"path":"/reference/hidden_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuzzy Rule-based System — Set.Universe","text":"","code":"## Creating Fuzzy Variables and Fuzzy Partitions ## Example 1 - It is the same of the R-Package 'Sets'  ## Creating Fuzzy Variables and Fuzzy Partitions ## Example is the same of the R-Package 'Sets' ## One Domain was used for Evaluation and Tip  ## Universe X - evaluation by the consumer in [0,10] minX = 0 maxX = 25 X <- Set.Universe(minX, maxX) FRBS = \"Mandani\"  ## Service service.poor <- GauFS(X, 0.0, 1.5) #plotFS(X,service.poor)  service.good <- GauFS(X, 5.0, 1.5) #plotFS(X,service.good)  service.excelent <- GauFS(X, 10, 1.5) #plotFS(X,service.excelent)  ## Food food.rancid <- TraFS(X, 0, 0, 2, 4) #plotFS(X,food.rancid)  food.delicious <- TraFS(X, 7, 9, 10, 10) #plotFS(X,food.delicious)  ## Tip tip.cheap <- TriFS(X, 0, 5, 10) #plotFS(X,tip.cheap)  tip.average <- TriFS(X, 7.5, 12.5, 17.5) #plotFS(X,tip.average)  tip.generous <- TriFS(X, 15, 20, 25) #plotFS(X,tip.generous)  ## Set the input ## Evaluation by the consumer (Facts)  service = 3 food = 8  ## Rules -- Specify rules and add outputs in a list ## A list is created in order to store the output of each rule  ## Out_Rules_Lst <- list()   ## 1) IF service is poor OR food is rancid THEN tip is cheap ## antecedent of the rule ## temp <- NOT(FRBS, dmFS(service,X,service.poor)) temp <- OR(FRBS, dmFS(service,X,service.poor), dmFS(food,X,food.rancid))  # consequent of the rule fr1 <- Implication(FRBS, temp, X, tip.cheap) plotFS(X,fr1)    ## 2) IF service is good THEN tip is average  ## temp <- NOT(FRBS, dmFS(service,X,service.good)) temp <- dmFS(service,X,service.good) fr2 <- Implication(FRBS, temp, X, tip.average) plotFS(X,fr2)   ## Cria lista com as saidas. Precisa de duas para dar certo Out_Rules_Lst <- list(fr1,fr2)   ## 3) IF service is excelent OR food is delicious THEN tip is generous  ## temp <- NOT(OR(FRBS, dmFS(service,X,service.excelent), dmFS(food,X,food.delicious))) temp <- OR(FRBS, dmFS(service,X,service.excelent), dmFS(food,X,food.delicious)) fr3 <- Implication(FRBS, temp, X, tip.generous) plotFS(X,fr3)   ## Cria uma nova lista com a saída. Agora é possível concatenar as listas lst_aux <- list(fr3)  ## Compute the agregation of all previous Rules ## Concatenando as listas Out_Rules_Lst <- c(Out_Rules_Lst, lst_aux)  ## Numero de regras eh o comprimento da lista length(Out_Rules_Lst) #> [1] 3  OutFS <-Aggregation(FRBS, X, Out_Rules_Lst) plotFS(X,OutFS)    ## Compute centroid in order provide final decision  FinalDecision <- centroidFS(X,OutFS) FinalDecision #> [1] 14.8859"},{"path":[]},{"path":"/news/index.html","id":"fuzzyclass-016","dir":"Changelog","previous_headings":"","what":"FuzzyClass 0.1.6","title":"FuzzyClass 0.1.6","text":"Add “Fuzzy Rule-based System” functions Fix: FuzzyNaiveBayes one column data Fix: “membership” dataframe one column data Fix: “Frequency” discrete distributions","code":""},{"path":"/news/index.html","id":"fuzzyclass-015","dir":"Changelog","previous_headings":"","what":"FuzzyClass 0.1.5","title":"FuzzyClass 0.1.5","text":"CRAN release: 2023-08-17 Add “double weighted fuzzy gamma naive bayes classifier” DWFuzzyGammaNaiveBayes Add “geometric fuzzy gamma naive bayes classifier” GeometricFuzzyGammaNaiveBayes Add “Fuzzy Bayes Rule classifier” FuzzyBayesRule Remove ordering method functions fuzzy parameters metd=4.","code":""},{"path":"/news/index.html","id":"fuzzyclass-014","dir":"Changelog","previous_headings":"","what":"FuzzyClass 0.1.4","title":"FuzzyClass 0.1.4","text":"CRAN release: 2023-03-07 Added new ordering method functions fuzzy parameters: GauNBFuzzyParam, ExpNBFuzzyParam,GamNBFuzzyParam PoiNBFuzzyParam. form can used considering metd = 4.","code":""},{"path":"/news/index.html","id":"fuzzyclass-013","dir":"Changelog","previous_headings":"","what":"FuzzyClass 0.1.3","title":"FuzzyClass 0.1.3","text":"CRAN release: 2022-11-16 Update parameters estimation function FuzzyTriangularNaiveBayes. Update predict optimized functions FuzzyGammaNaiveBayes. Update functions GamNBFuzzyParam GauNBFuzzyParam. predict function optimized FuzzyGammaNaiveBayes, FuzzyBetaNaiveBayes, FuzzyBinomialNaiveBayes,FuzzyExponencialNaiveBayes,FuzzyTriangularNaiveBayes,FuzzyPoissonNaiveBayes","code":""},{"path":"/news/index.html","id":"fuzzyclass-012","dir":"Changelog","previous_headings":"","what":"FuzzyClass 0.1.2","title":"FuzzyClass 0.1.2","text":"CRAN release: 2022-08-25","code":""},{"path":"/news/index.html","id":"new-features-0-1-2","dir":"Changelog","previous_headings":"","what":"New features","title":"FuzzyClass 0.1.2","text":"Changed \\() function(.) function FuzzyNaiveBayes, line 262. Changed description FuzzyClass Documentation","code":""},{"path":"/news/index.html","id":"fuzzyclass-011","dir":"Changelog","previous_headings":"","what":"FuzzyClass 0.1.1","title":"FuzzyClass 0.1.1","text":"CRAN release: 2022-05-27","code":""},{"path":"/news/index.html","id":"new-features-0-1-1","dir":"Changelog","previous_headings":"","what":"New features","title":"FuzzyClass 0.1.1","text":"Estimation new form function FuzzyGammaNaiveBayes.","code":""}]
